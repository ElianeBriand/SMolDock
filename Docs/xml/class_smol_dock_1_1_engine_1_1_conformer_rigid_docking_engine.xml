<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine" kind="class" language="C++" prot="public">
    <compoundname>SmolDock::Engine::ConformerRigidDockingEngine</compoundname>
    <basecompoundref refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine" prot="public" virt="non-virtual">SmolDock::Engine::AbstractDockingEngine</basecompoundref>
    <includes refid="_conformer_rigid_docking_engine_8h" local="no">ConformerRigidDockingEngine.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a022a37cb30a640404c634aace67ebea1" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int SmolDock::Engine::ConformerRigidDockingEngine::conformer_num</definition>
        <argsstring></argsstring>
        <name>conformer_num</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="62" column="1" bodyfile="Engines/ConformerRigidDockingEngine.h" bodystart="62" bodyend="-1"/>
        <referencedby refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1aeb9358858c3af9c718c168dcff14f96b" compoundref="_conformer_rigid_docking_engine_8cpp" startline="30" endline="32">ConformerRigidDockingEngine</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1adc3f28b5b4af09c54eb73d9f445dbd2d" prot="private" static="no" mutable="no">
        <type><ref refid="class_smol_dock_1_1_protein" kindref="compound">Protein</ref> *</type>
        <definition>Protein* SmolDock::Engine::ConformerRigidDockingEngine::orig_protein</definition>
        <argsstring></argsstring>
        <name>orig_protein</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="64" column="1" bodyfile="Engines/ConformerRigidDockingEngine.h" bodystart="64" bodyend="-1"/>
        <referencedby refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1acf8082b5d9d68fc2cfe975ad62a2459f" compoundref="_conformer_rigid_docking_engine_8cpp" startline="34" endline="37">setProtein</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1af3d543e92676f9d66a5a3d0ccc0cd5a9" prot="private" static="no" mutable="no">
        <type><ref refid="class_smol_dock_1_1_molecule" kindref="compound">Molecule</ref> *</type>
        <definition>Molecule* SmolDock::Engine::ConformerRigidDockingEngine::orig_ligand</definition>
        <argsstring></argsstring>
        <name>orig_ligand</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="65" column="1" bodyfile="Engines/ConformerRigidDockingEngine.h" bodystart="65" bodyend="-1"/>
        <referencedby refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a14262d85db1fd4bfe21780029fba842c" compoundref="_conformer_rigid_docking_engine_8cpp" startline="39" endline="47">setLigand</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a046b6f9d1c856e1b38034388a8fb5f9f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SmolDock::Engine::ConformerRigidDockingEngine::random_seed</definition>
        <argsstring></argsstring>
        <name>random_seed</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="67" column="1" bodyfile="Engines/ConformerRigidDockingEngine.h" bodystart="67" bodyend="-1"/>
        <referencedby refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a756b9c1300d1c3828b519a2ca05ada59" compoundref="_conformer_rigid_docking_engine_8cpp" startline="115" endline="117">setRandomSeed</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a9bc1d216cf102c383444cb6f9955dfaa" prot="private" static="no" mutable="no">
        <type>std::mt19937</type>
        <definition>std::mt19937 SmolDock::Engine::ConformerRigidDockingEngine::rnd_generator</definition>
        <argsstring></argsstring>
        <name>rnd_generator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="68" column="1" bodyfile="Engines/ConformerRigidDockingEngine.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a5a7a60763037a8d8b7c6c2a9defa512f" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; RDKit::RWMol &gt;</type>
        <definition>std::shared_ptr&lt;RDKit::RWMol&gt; SmolDock::Engine::ConformerRigidDockingEngine::rwmol</definition>
        <argsstring></argsstring>
        <name>rwmol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="70" column="1" bodyfile="Engines/ConformerRigidDockingEngine.h" bodystart="70" bodyend="-1"/>
        <referencedby refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a14262d85db1fd4bfe21780029fba842c" compoundref="_conformer_rigid_docking_engine_8cpp" startline="39" endline="47">setLigand</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1aeb9358858c3af9c718c168dcff14f96b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SmolDock::Engine::ConformerRigidDockingEngine::ConformerRigidDockingEngine</definition>
        <argsstring>(unsigned int conformer_num)</argsstring>
        <name>ConformerRigidDockingEngine</name>
        <param>
          <type>unsigned int</type>
          <declname>conformer_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="39" column="1" bodyfile="Engines/ConformerRigidDockingEngine.cpp" bodystart="30" bodyend="32"/>
        <references refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a022a37cb30a640404c634aace67ebea1" compoundref="_conformer_rigid_docking_engine_8h" startline="62">conformer_num</references>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1acd3b7345ecae8f0c92ca0168b794eac3" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool SmolDock::Engine::ConformerRigidDockingEngine::setDockingBox</definition>
        <argsstring>(DockingBoxSetting setting) final</argsstring>
        <name>setDockingBox</name>
        <reimplements refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine_1a169f25051203c912c2b90bf3387baa22">setDockingBox</reimplements>
        <param>
          <type><ref refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine_1aca703508a3ce31d577d3ec108020789b" kindref="member">DockingBoxSetting</ref></type>
          <declname>setting</declname>
        </param>
        <briefdescription>
<para>Set the protein domain/box to consider for docking. </para>        </briefdescription>
        <detaileddescription>
<para>A restriction of the search space can be necessary : this provides a way to specify a domain/box in the protein where the docking will take place.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>setting</parametername>
</parameternamelist>
<parameterdescription>
<para>General-scope DockingBox specification </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns whether it has been successful </para></simplesect>
<simplesect kind="see"><para><ref refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1acf8082b5d9d68fc2cfe975ad62a2459f" kindref="member">setProtein()</ref>, <ref refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a14262d85db1fd4bfe21780029fba842c" kindref="member">setLigand()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="42" column="1" bodyfile="Engines/ConformerRigidDockingEngine.cpp" bodystart="104" bodyend="112"/>
        <references refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine_1aca703508a3ce31d577d3ec108020789ba312db69f5bf4447dfe3c58983083b54f">SmolDock::Engine::AbstractDockingEngine::everything</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="37" endline="86">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1acf8082b5d9d68fc2cfe975ad62a2459f" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool SmolDock::Engine::ConformerRigidDockingEngine::setProtein</definition>
        <argsstring>(Protein *p) final</argsstring>
        <name>setProtein</name>
        <reimplements refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine_1af00ee3be60acc0c4ba9aac03a3b09c35">setProtein</reimplements>
        <param>
          <type><ref refid="class_smol_dock_1_1_protein" kindref="compound">Protein</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Load a protein for docking. </para>        </briefdescription>
        <detaileddescription>
<para>Load a protein for docking. Note that it <emphasis>can</emphasis> be modified by the engine.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="class_smol_dock_1_1_protein" kindref="compound">Protein</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns whether it has been successful </para></simplesect>
<simplesect kind="see"><para><ref refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a14262d85db1fd4bfe21780029fba842c" kindref="member">setLigand()</ref>, <ref refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1acd3b7345ecae8f0c92ca0168b794eac3" kindref="member">setDockingBox()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="44" column="1" bodyfile="Engines/ConformerRigidDockingEngine.cpp" bodystart="34" bodyend="37"/>
        <references refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1adc3f28b5b4af09c54eb73d9f445dbd2d" compoundref="_conformer_rigid_docking_engine_8h" startline="64">orig_protein</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="37" endline="86">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a14262d85db1fd4bfe21780029fba842c" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool SmolDock::Engine::ConformerRigidDockingEngine::setLigand</definition>
        <argsstring>(Molecule *m) final</argsstring>
        <name>setLigand</name>
        <reimplements refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine_1aae76a86e5dfc18b19e3a16c55da6556f">setLigand</reimplements>
        <param>
          <type><ref refid="class_smol_dock_1_1_molecule" kindref="compound">Molecule</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Load a molecule ligand for docking. </para>        </briefdescription>
        <detaileddescription>
<para>Load a molecule ligand for docking. Note that it <emphasis>can</emphasis> be modified by the engine.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="class_smol_dock_1_1_molecule" kindref="compound">Molecule</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns whether it has been successful </para></simplesect>
<simplesect kind="see"><para><ref refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1acf8082b5d9d68fc2cfe975ad62a2459f" kindref="member">setProtein()</ref>, <ref refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1acd3b7345ecae8f0c92ca0168b794eac3" kindref="member">setDockingBox()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="46" column="1" bodyfile="Engines/ConformerRigidDockingEngine.cpp" bodystart="39" bodyend="47"/>
        <references refid="class_smol_dock_1_1_molecule_1a8d3c96cb2b2014b96a5119ba1631272d" compoundref="_molecule_8cpp" startline="123" endline="125">SmolDock::Molecule::getInternalRWMol</references>
        <references refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1af3d543e92676f9d66a5a3d0ccc0cd5a9" compoundref="_conformer_rigid_docking_engine_8h" startline="65">orig_ligand</references>
        <references refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a5a7a60763037a8d8b7c6c2a9defa512f" compoundref="_conformer_rigid_docking_engine_8h" startline="70">rwmol</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="37" endline="86">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a756b9c1300d1c3828b519a2ca05ada59" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void SmolDock::Engine::ConformerRigidDockingEngine::setRandomSeed</definition>
        <argsstring>(int seed) final</argsstring>
        <name>setRandomSeed</name>
        <reimplements refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine_1a6172e465dcd7dcecac29fb30612d0227">setRandomSeed</reimplements>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
<para>Set the RNG seed for reproducibility. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>RNG see </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns whether it has been successful </para></simplesect>
<simplesect kind="see"><para><ref refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1acf8082b5d9d68fc2cfe975ad62a2459f" kindref="member">setProtein()</ref>, <ref refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a14262d85db1fd4bfe21780029fba842c" kindref="member">setLigand()</ref>, <ref refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1acd3b7345ecae8f0c92ca0168b794eac3" kindref="member">setDockingBox()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="48" column="1" bodyfile="Engines/ConformerRigidDockingEngine.cpp" bodystart="115" bodyend="117"/>
        <references refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a046b6f9d1c856e1b38034388a8fb5f9f" compoundref="_conformer_rigid_docking_engine_8h" startline="67">random_seed</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="37" endline="86">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a3abc1a2cdbb3f1b9f545f863f9ec5e43" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool SmolDock::Engine::ConformerRigidDockingEngine::setupDockingEngine</definition>
        <argsstring>() final</argsstring>
        <name>setupDockingEngine</name>
        <reimplements refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine_1a38d55d9ee6fde7df45b25b772cffbb9f">setupDockingEngine</reimplements>
        <briefdescription>
<para>Prepare the engine for docking. </para>        </briefdescription>
        <detaileddescription>
<para>Prepare the engine for docking. It is expected in future versions to separate protein, ligand, and prot-ligand initilization, so as to allow maximum work sharing in screening scenario (same prot = same prot prep, just different ligand)</para><para><simplesect kind="return"><para>Returns whether it has been successful </para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="52" column="1" bodyfile="Engines/ConformerRigidDockingEngine.cpp" bodystart="49" bodyend="93"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="37" endline="86">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a7bee39278168cb4d7ee6558b3a3d3bb4" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void SmolDock::Engine::ConformerRigidDockingEngine::runDockingEngine</definition>
        <argsstring>() final</argsstring>
        <name>runDockingEngine</name>
        <reimplements refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine_1a0f08ef422ed79b3dac0b3144a241abe1">runDockingEngine</reimplements>
        <briefdescription>
<para>Run the docking. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns whether it has been successful </para></simplesect>
<simplesect kind="see"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="54" column="1" bodyfile="Engines/ConformerRigidDockingEngine.cpp" bodystart="95" bodyend="97"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="37" endline="86">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a52fa8c276c911df08d4dd8d6744ae540" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="class_smol_dock_1_1_docking_result" kindref="compound">DockingResult</ref> &gt;</type>
        <definition>std::shared_ptr&lt; DockingResult &gt; SmolDock::Engine::ConformerRigidDockingEngine::getDockingResult</definition>
        <argsstring>() final</argsstring>
        <name>getDockingResult</name>
        <reimplements refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine_1a2e881d63b0214caf95efa3245446faf3">getDockingResult</reimplements>
        <briefdescription>
<para>Get the docking results. </para>        </briefdescription>
        <detaileddescription>
<para>Behaviour is undefined if called before <ref refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a7bee39278168cb4d7ee6558b3a3d3bb4" kindref="member">runDockingEngine()</ref></para><para><simplesect kind="return"><para>The results of the docking. </para></simplesect>
<simplesect kind="see"><para><ref refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a7bee39278168cb4d7ee6558b3a3d3bb4" kindref="member">runDockingEngine()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engines/ConformerRigidDockingEngine.h" line="57" column="1" bodyfile="Engines/ConformerRigidDockingEngine.cpp" bodystart="99" bodyend="101"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="37" endline="86">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generates a lot of conformer, then runs rigid docking on them. </para>    </briefdescription>
    <detaileddescription>
<para>The general idea is generating lots of conformer, then docking them with constant bond angle and distance (&quot;rigid&quot; docking). The theory being that this may be faster than real docking and still produce a similar affinity ranking. (In practice, I do not know if it would work : hence this to try it </para>    </detaileddescription>
    <inheritancegraph>
      <node id="38">
        <label>SmolDock::Engine::AbstractDockingEngine</label>
        <link refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine"/>
      </node>
      <node id="37">
        <label>SmolDock::Engine::ConformerRigidDockingEngine</label>
        <link refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="45">
        <label>T</label>
      </node>
      <node id="41">
        <label>SmolDock::Molecule</label>
        <link refid="class_smol_dock_1_1_molecule"/>
        <childnode refid="42" relation="private-inheritance">
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>-bonds</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>-smiles</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>-atoms</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>std::vector&lt; std::shared_ptr&lt; SmolDock::Bond &gt; &gt;</label>
        <childnode refid="44" relation="template-instance">
          <edgelabel>&lt; std::shared_ptr&lt; SmolDock::Bond &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="45" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>std::vector&lt; std::shared_ptr&lt; SmolDock::AminoAcid &gt; &gt;</label>
        <childnode refid="44" relation="template-instance">
          <edgelabel>&lt; std::shared_ptr&lt; SmolDock::AminoAcid &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>SmolDock::Structure</label>
        <link refid="class_smol_dock_1_1_structure"/>
      </node>
      <node id="47">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="49">
        <label>SmolDock::Protein</label>
        <link refid="class_smol_dock_1_1_protein"/>
        <childnode refid="42" relation="private-inheritance">
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>-aminoacids</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>-heteroatoms</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>SmolDock::Engine::AbstractDockingEngine</label>
        <link refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine"/>
      </node>
      <node id="39">
        <label>SmolDock::Engine::ConformerRigidDockingEngine</label>
        <link refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>-orig_ligand</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>-orig_protein</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>std::vector&lt; std::shared_ptr&lt; SmolDock::Atom &gt; &gt;</label>
        <childnode refid="44" relation="template-instance">
          <edgelabel>&lt; std::shared_ptr&lt; SmolDock::Atom &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>std::string</label>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Engines/ConformerRigidDockingEngine.h" line="36" column="1" bodyfile="Engines/ConformerRigidDockingEngine.h" bodystart="36" bodyend="71"/>
    <listofallmembers>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a022a37cb30a640404c634aace67ebea1" prot="private" virt="non-virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>conformer_num</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1aeb9358858c3af9c718c168dcff14f96b" prot="public" virt="non-virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>ConformerRigidDockingEngine</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine_1aca703508a3ce31d577d3ec108020789b" prot="public" virt="non-virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>DockingBoxSetting</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_abstract_docking_engine_1a8147cf906368466da87fa439d537bf62" prot="public" virt="non-virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>DockingBoxShape</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a52fa8c276c911df08d4dd8d6744ae540" prot="public" virt="virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>getDockingResult</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1af3d543e92676f9d66a5a3d0ccc0cd5a9" prot="private" virt="non-virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>orig_ligand</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1adc3f28b5b4af09c54eb73d9f445dbd2d" prot="private" virt="non-virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>orig_protein</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a046b6f9d1c856e1b38034388a8fb5f9f" prot="private" virt="non-virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>random_seed</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a9bc1d216cf102c383444cb6f9955dfaa" prot="private" virt="non-virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>rnd_generator</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a7bee39278168cb4d7ee6558b3a3d3bb4" prot="public" virt="virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>runDockingEngine</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a5a7a60763037a8d8b7c6c2a9defa512f" prot="private" virt="non-virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>rwmol</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1acd3b7345ecae8f0c92ca0168b794eac3" prot="public" virt="virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>setDockingBox</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a14262d85db1fd4bfe21780029fba842c" prot="public" virt="virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>setLigand</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1acf8082b5d9d68fc2cfe975ad62a2459f" prot="public" virt="virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>setProtein</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a756b9c1300d1c3828b519a2ca05ada59" prot="public" virt="virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>setRandomSeed</name></member>
      <member refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a3abc1a2cdbb3f1b9f545f863f9ec5e43" prot="public" virt="virtual"><scope>SmolDock::Engine::ConformerRigidDockingEngine</scope><name>setupDockingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
