<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_smol_dock_1_1_molecule" kind="class" language="C++" prot="public">
    <compoundname>SmolDock::Molecule</compoundname>
    <basecompoundref refid="class_smol_dock_1_1_structure" prot="private" virt="non-virtual">SmolDock::Structure</basecompoundref>
    <includes refid="_molecule_8h" local="no">Molecule.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_smol_dock_1_1_molecule_1a2033be89cdf71e3c8750054d8d19425f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class MoleculeTraversal</definition>
        <argsstring></argsstring>
        <name>MoleculeTraversal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="55" column="1" bodyfile="Structures/Molecule.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_smol_dock_1_1_molecule_1a3cb039460aae8734c10a3588e1d670a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UnitTestHelper</definition>
        <argsstring></argsstring>
        <name>UnitTestHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="56" column="1" bodyfile="Structures/Molecule.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_smol_dock_1_1_molecule_1a21986fb82cbece6c57579a68c1bf5f39" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class PDBWriter</definition>
        <argsstring></argsstring>
        <name>PDBWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="57" column="1" bodyfile="Structures/Molecule.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_smol_dock_1_1_atom" kindref="compound">Atom</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Atom&gt; &gt; SmolDock::Molecule::atoms</definition>
        <argsstring></argsstring>
        <name>atoms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="151" column="1" bodyfile="Structures/Molecule.h" bodystart="151" bodyend="-1"/>
        <referencedby refid="class_smol_dock_1_1_molecule_1a449f37f171474849ad896e33dfc9e2f4" compoundref="_molecule_8cpp" startline="70" endline="105">generateConformer</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1a2767177fabc41b3aeaa68c77d8addd1b" compoundref="_molecule_8cpp" startline="107" endline="153">generateConformers</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1a7dc0c882da26261dcd2762429b07a3d4" compoundref="_molecule_8cpp" startline="155" endline="157">numberOfAtoms</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1ad55fef0289e5fd81b58946638b212b76" compoundref="_molecule_8cpp" startline="193" endline="322">populateInternalAtomAndBondFromRWMol</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1af6263934134836e9ce66d2254b6b6801" compoundref="_molecule_8cpp" startline="324" endline="334">updateAtomPositionsFromiConformer</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1a70156ffc4081eb92f9dc4e2c70096c84" compoundref="_molecule_8cpp" startline="336" endline="379">deepcopy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_smol_dock_1_1_molecule_1a18d9793aa2e080c9cefdc22afd40f314" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_smol_dock_1_1_bond" kindref="compound">Bond</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Bond&gt; &gt; SmolDock::Molecule::bonds</definition>
        <argsstring></argsstring>
        <name>bonds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="152" column="1" bodyfile="Structures/Molecule.h" bodystart="152" bodyend="-1"/>
        <referencedby refid="class_smol_dock_1_1_molecule_1a8b1f02ad4e3b2ad991162668a61c2ddc" compoundref="_molecule_8cpp" startline="159" endline="161">numberOfBonds</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1ad55fef0289e5fd81b58946638b212b76" compoundref="_molecule_8cpp" startline="193" endline="322">populateInternalAtomAndBondFromRWMol</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1a70156ffc4081eb92f9dc4e2c70096c84" compoundref="_molecule_8cpp" startline="336" endline="379">deepcopy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; RDKit::RWMol &gt;</type>
        <definition>std::shared_ptr&lt;RDKit::RWMol&gt; SmolDock::Molecule::rwmol</definition>
        <argsstring></argsstring>
        <name>rwmol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="154" column="1" bodyfile="Structures/Molecule.h" bodystart="154" bodyend="-1"/>
        <referencedby refid="class_smol_dock_1_1_molecule_1a46a03e954e99f150a1503ee0d5083da7" compoundref="_molecule_8cpp" startline="41" endline="67">populateFromSMILES</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1a449f37f171474849ad896e33dfc9e2f4" compoundref="_molecule_8cpp" startline="70" endline="105">generateConformer</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1a2767177fabc41b3aeaa68c77d8addd1b" compoundref="_molecule_8cpp" startline="107" endline="153">generateConformers</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1a4ae176fc96acfab443a13ba50882a849" compoundref="_molecule_8cpp" startline="163" endline="182">populateFromPDB</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1ad55fef0289e5fd81b58946638b212b76" compoundref="_molecule_8cpp" startline="193" endline="322">populateInternalAtomAndBondFromRWMol</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1a70156ffc4081eb92f9dc4e2c70096c84" compoundref="_molecule_8cpp" startline="336" endline="379">deepcopy</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1a9aba4607923da552cf15847567c77603" compoundref="_molecule_8cpp" startline="381" endline="398">getInitialConformer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_smol_dock_1_1_molecule_1a59288faa4bbacab2959858b398cb459e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SmolDock::Molecule::smiles</definition>
        <argsstring></argsstring>
        <name>smiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="155" column="1" bodyfile="Structures/Molecule.h" bodystart="155" bodyend="-1"/>
        <referencedby refid="class_smol_dock_1_1_molecule_1a46a03e954e99f150a1503ee0d5083da7" compoundref="_molecule_8cpp" startline="41" endline="67">populateFromSMILES</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_smol_dock_1_1_molecule_1ac20346642bc3835228726b2508d8c42f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SmolDock::Molecule::residue_name</definition>
        <argsstring></argsstring>
        <name>residue_name</name>
        <initializer>= &quot;LIG&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="158" column="1" bodyfile="Structures/Molecule.h" bodystart="158" bodyend="-1"/>
        <referencedby refid="class_smol_dock_1_1_molecule_1afe9743bfc4876343b6c63b0aac892f83" compoundref="_molecule_8cpp" startline="184" endline="186">getResidueName</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1af9eb4a4fe0f1d72c104393b690e8f5cb" compoundref="_molecule_8cpp" startline="188" endline="191">setResidueName</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_smol_dock_1_1_molecule_1a008c28b068bf77dc74cc41926ee24507" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SmolDock::Molecule::initial_conformer_id</definition>
        <argsstring></argsstring>
        <name>initial_conformer_id</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="163" column="1" bodyfile="Structures/Molecule.h" bodystart="163" bodyend="-1"/>
        <referencedby refid="class_smol_dock_1_1_molecule_1a2767177fabc41b3aeaa68c77d8addd1b" compoundref="_molecule_8cpp" startline="107" endline="153">generateConformers</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1ad55fef0289e5fd81b58946638b212b76" compoundref="_molecule_8cpp" startline="193" endline="322">populateInternalAtomAndBondFromRWMol</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1a3a4a39128d64413d79d857bcbf790163" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SmolDock::Molecule::Molecule</definition>
        <argsstring>()</argsstring>
        <name>Molecule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1a46a03e954e99f150a1503ee0d5083da7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SmolDock::Molecule::populateFromSMILES</definition>
        <argsstring>(const std::string &amp;smiles, unsigned int seed=36754)</argsstring>
        <name>populateFromSMILES</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>smiles</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>seed</declname>
          <defval>36754</defval>
        </param>
        <briefdescription>
<para>Populate atoms and bonds from SMILES. </para>        </briefdescription>
        <detaileddescription>
<para>Populate atoms and bonds from SMILES. This uses the RDKit backend. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>smiles</parametername>
</parameternamelist>
<parameterdescription>
<para>SMILES string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>RNG seed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the parsing and initial conformer generation was successful. </para></simplesect>
<simplesect kind="see"><para><ref refid="class_smol_dock_1_1_molecule_1a4ae176fc96acfab443a13ba50882a849" kindref="member">populateFromPDB()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="72" column="1" bodyfile="Structures/Molecule.cpp" bodystart="41" bodyend="67"/>
        <references refid="class_smol_dock_1_1_molecule_1ad55fef0289e5fd81b58946638b212b76" compoundref="_molecule_8cpp" startline="193" endline="322">populateInternalAtomAndBondFromRWMol</references>
        <references refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" compoundref="_molecule_8h" startline="154">rwmol</references>
        <references refid="class_smol_dock_1_1_molecule_1a59288faa4bbacab2959858b398cb459e" compoundref="_molecule_8h" startline="155">smiles</references>
        <referencedby refid="_py_structures_8h_1a18cad6e29d14a0da9d2cd9464e7e2356" compoundref="_py_structures_8cpp" startline="38" endline="83">export_Structures</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1a4ae176fc96acfab443a13ba50882a849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SmolDock::Molecule::populateFromPDB</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;smiles_hint=&quot;&quot;, unsigned int seed=36754)</argsstring>
        <name>populateFromPDB</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>smiles_hint</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>seed</declname>
          <defval>36754</defval>
        </param>
        <briefdescription>
<para>Populate atoms and bonds from a PDB file. Additionally, a SMILES string can be used for bond order hint. </para>        </briefdescription>
        <detaileddescription>
<para>Due to limitation of the PDB file format, it is difficult to infer bond order (single/double/aromatic bond) from connectivity data. The underlying implementation in RDKit does not attempts it. A SMILES string with the correct aromaticity/bonds can be supplied to help obtain accurate internal representation.</para><para>Only the first model and first chain of the PDB file is used to construct the molecule.</para><para>Populate atoms and bonds from SMILES. This uses the RDKit backend. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to PDB file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>smiles_hint</parametername>
</parameternamelist>
<parameterdescription>
<para>SMILES for the loaded molecule. If none available, use the empty string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the parsing and initial conformer generation was successful. </para></simplesect>
<simplesect kind="see"><para><ref refid="class_smol_dock_1_1_molecule_1a46a03e954e99f150a1503ee0d5083da7" kindref="member">populateFromSMILES()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="89" column="1" bodyfile="Structures/Molecule.cpp" bodystart="163" bodyend="182"/>
        <references refid="namespace_smol_dock_1a288ddd3593922bcc17e5feb114841802" compoundref="_p_d_b_ligand_utils_8cpp" startline="11" endline="139">SmolDock::AssignBondOrderFromTemplateSMILES</references>
        <references refid="class_smol_dock_1_1_molecule_1ad55fef0289e5fd81b58946638b212b76" compoundref="_molecule_8cpp" startline="193" endline="322">populateInternalAtomAndBondFromRWMol</references>
        <references refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" compoundref="_molecule_8h" startline="154">rwmol</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="39" endline="132">main</referencedby>
        <referencedby refid="_py_structures_8h_1a18cad6e29d14a0da9d2cd9464e7e2356" compoundref="_py_structures_8cpp" startline="38" endline="83">export_Structures</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1a7dc0c882da26261dcd2762429b07a3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int SmolDock::Molecule::numberOfAtoms</definition>
        <argsstring>()</argsstring>
        <name>numberOfAtoms</name>
        <briefdescription>
<para>Return the number of atom in the <ref refid="class_smol_dock_1_1_molecule" kindref="compound">Molecule</ref>, Hydrogen excepted. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="92" column="1" bodyfile="Structures/Molecule.cpp" bodystart="155" bodyend="157"/>
        <references refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" compoundref="_molecule_8h" startline="151">atoms</references>
        <referencedby refid="_py_structures_8h_1a18cad6e29d14a0da9d2cd9464e7e2356" compoundref="_py_structures_8cpp" startline="38" endline="83">export_Structures</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1a8b1f02ad4e3b2ad991162668a61c2ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int SmolDock::Molecule::numberOfBonds</definition>
        <argsstring>()</argsstring>
        <name>numberOfBonds</name>
        <briefdescription>
<para>Return the number of bonds in the <ref refid="class_smol_dock_1_1_molecule" kindref="compound">Molecule</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="95" column="1" bodyfile="Structures/Molecule.cpp" bodystart="159" bodyend="161"/>
        <references refid="class_smol_dock_1_1_molecule_1a18d9793aa2e080c9cefdc22afd40f314" compoundref="_molecule_8h" startline="152">bonds</references>
        <referencedby refid="_py_structures_8h_1a18cad6e29d14a0da9d2cd9464e7e2356" compoundref="_py_structures_8cpp" startline="38" endline="83">export_Structures</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1a9aba4607923da552cf15847567c77603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref></type>
        <definition>iConformer SmolDock::Molecule::getInitialConformer</definition>
        <argsstring>()</argsstring>
        <name>getInitialConformer</name>
        <briefdescription>
<para>Obtain the conformer that was either loaded from file or generated when populating the <ref refid="class_smol_dock_1_1_molecule" kindref="compound">Molecule</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>If the <ref refid="class_smol_dock_1_1_molecule" kindref="compound">Molecule</ref> was loaded from a file format containing coordinate (PDB, ...), the initial conformer has those coordinate. Otherwise, it is a RDKit generated conformer.</para><para><simplesect kind="return"><para>Returns <ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref> for initial conformer </para></simplesect>
<simplesect kind="see"><para><ref refid="class_smol_dock_1_1_molecule_1a449f37f171474849ad896e33dfc9e2f4" kindref="member">generateConformer()</ref>, <ref refid="class_smol_dock_1_1_molecule_1a2767177fabc41b3aeaa68c77d8addd1b" kindref="member">generateConformers()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="106" column="1" bodyfile="Structures/Molecule.cpp" bodystart="381" bodyend="398"/>
        <references refid="struct_smol_dock_1_1i_conformer_1a1dbd8cb4eaa4e5e2f0afcdd1b36dd862" compoundref="i_conformer_8h" startline="32">SmolDock::iConformer::atomicRadius</references>
        <references refid="namespace_smol_dock_1a9c3abf1e37dc4fe013df80997dedb20b" compoundref="_atom_8cpp" startline="86" endline="97">SmolDock::atomTypeToAtomicRadius</references>
        <references refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" compoundref="_molecule_8h" startline="154">rwmol</references>
        <references refid="namespace_smol_dock_1ae559278f4b66ec9a09ddfaebb224f897" compoundref="_atom_8cpp" startline="73" endline="84">SmolDock::stringToAtomType</references>
        <references refid="struct_smol_dock_1_1i_conformer_1add04de1dd457ae228e398ffa9260497d" compoundref="i_conformer_8h" startline="33">SmolDock::iConformer::type</references>
        <references refid="struct_smol_dock_1_1i_conformer_1a45c379f6a880da313bf3519dc415e992" compoundref="i_conformer_8h" startline="31">SmolDock::iConformer::x</references>
        <references refid="struct_smol_dock_1_1i_conformer_1ac3019c0cd62660a4392591dd9519cc9a" compoundref="i_conformer_8h" startline="31">SmolDock::iConformer::y</references>
        <references refid="struct_smol_dock_1_1i_conformer_1a5c1fc6f9bad31ec2731337e9ba1e9a0f" compoundref="i_conformer_8h" startline="31">SmolDock::iConformer::z</references>
        <referencedby refid="_py_structures_8h_1a18cad6e29d14a0da9d2cd9464e7e2356" compoundref="_py_structures_8cpp" startline="38" endline="83">export_Structures</referencedby>
        <referencedby refid="class_smol_dock_1_1_re_scorer_1a102b6af24e4f5dc420c2bdfba5a792f0" compoundref="_re_scorer_8cpp" startline="15" endline="20">SmolDock::ReScorer::prepare</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1a449f37f171474849ad896e33dfc9e2f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SmolDock::Molecule::generateConformer</definition>
        <argsstring>(iConformer &amp;conformer, int seed=367454)</argsstring>
        <name>generateConformer</name>
        <param>
          <type><ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref> &amp;</type>
          <declname>conformer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
          <defval>367454</defval>
        </param>
        <briefdescription>
<para>Generate a conformer of this molecule. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conformer</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to conformer object to be filled. Not modified if generation fails. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>RNG seed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if successfully generated conformer, false otherwise </para></simplesect>
<simplesect kind="see"><para><ref refid="class_smol_dock_1_1_molecule_1a2767177fabc41b3aeaa68c77d8addd1b" kindref="member">generateConformers()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="115" column="1" bodyfile="Structures/Molecule.cpp" bodystart="70" bodyend="105"/>
        <references refid="struct_smol_dock_1_1i_conformer_1a1dbd8cb4eaa4e5e2f0afcdd1b36dd862" compoundref="i_conformer_8h" startline="32">SmolDock::iConformer::atomicRadius</references>
        <references refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" compoundref="_molecule_8h" startline="151">atoms</references>
        <references refid="namespace_smol_dock_1a9c3abf1e37dc4fe013df80997dedb20b" compoundref="_atom_8cpp" startline="86" endline="97">SmolDock::atomTypeToAtomicRadius</references>
        <references refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" compoundref="_molecule_8h" startline="154">rwmol</references>
        <references refid="namespace_smol_dock_1ae559278f4b66ec9a09ddfaebb224f897" compoundref="_atom_8cpp" startline="73" endline="84">SmolDock::stringToAtomType</references>
        <references refid="struct_smol_dock_1_1i_conformer_1add04de1dd457ae228e398ffa9260497d" compoundref="i_conformer_8h" startline="33">SmolDock::iConformer::type</references>
        <references refid="struct_smol_dock_1_1i_conformer_1a45c379f6a880da313bf3519dc415e992" compoundref="i_conformer_8h" startline="31">SmolDock::iConformer::x</references>
        <references refid="struct_smol_dock_1_1i_conformer_1ac3019c0cd62660a4392591dd9519cc9a" compoundref="i_conformer_8h" startline="31">SmolDock::iConformer::y</references>
        <references refid="struct_smol_dock_1_1i_conformer_1a5c1fc6f9bad31ec2731337e9ba1e9a0f" compoundref="i_conformer_8h" startline="31">SmolDock::iConformer::z</references>
        <referencedby refid="_py_structures_8h_1a18cad6e29d14a0da9d2cd9464e7e2356" compoundref="_py_structures_8cpp" startline="38" endline="83">export_Structures</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1a2767177fabc41b3aeaa68c77d8addd1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int SmolDock::Molecule::generateConformers</definition>
        <argsstring>(std::vector&lt; iConformer &gt; &amp;viConformers, unsigned int num, int seed=367454)</argsstring>
        <name>generateConformers</name>
        <param>
          <type>std::vector&lt; <ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref> &gt; &amp;</type>
          <declname>viConformers</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
          <defval>367454</defval>
        </param>
        <briefdescription>
<para>Generate a vector of conformer of this molecule. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>viConformers</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to vector to be filled with conformer. May already contain something. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of conformers to attempt to generate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>RNG seed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the number of conformer actually generated. May be 0. </para></simplesect>
<simplesect kind="see"><para><ref refid="class_smol_dock_1_1_molecule_1a449f37f171474849ad896e33dfc9e2f4" kindref="member">generateConformer()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="125" column="1" bodyfile="Structures/Molecule.cpp" bodystart="107" bodyend="153"/>
        <references refid="struct_smol_dock_1_1i_conformer_1a1dbd8cb4eaa4e5e2f0afcdd1b36dd862" compoundref="i_conformer_8h" startline="32">SmolDock::iConformer::atomicRadius</references>
        <references refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" compoundref="_molecule_8h" startline="151">atoms</references>
        <references refid="namespace_smol_dock_1a9c3abf1e37dc4fe013df80997dedb20b" compoundref="_atom_8cpp" startline="86" endline="97">SmolDock::atomTypeToAtomicRadius</references>
        <references refid="class_smol_dock_1_1_molecule_1a008c28b068bf77dc74cc41926ee24507" compoundref="_molecule_8h" startline="163">initial_conformer_id</references>
        <references refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" compoundref="_molecule_8h" startline="154">rwmol</references>
        <references refid="namespace_smol_dock_1ae559278f4b66ec9a09ddfaebb224f897" compoundref="_atom_8cpp" startline="73" endline="84">SmolDock::stringToAtomType</references>
        <references refid="struct_smol_dock_1_1i_conformer_1add04de1dd457ae228e398ffa9260497d" compoundref="i_conformer_8h" startline="33">SmolDock::iConformer::type</references>
        <references refid="struct_smol_dock_1_1i_conformer_1ad310936289e38ae6fca788741b0cfffa" compoundref="i_conformer_8h" startline="34">SmolDock::iConformer::variant</references>
        <references refid="struct_smol_dock_1_1i_conformer_1a45c379f6a880da313bf3519dc415e992" compoundref="i_conformer_8h" startline="31">SmolDock::iConformer::x</references>
        <references refid="struct_smol_dock_1_1i_conformer_1ac3019c0cd62660a4392591dd9519cc9a" compoundref="i_conformer_8h" startline="31">SmolDock::iConformer::y</references>
        <references refid="struct_smol_dock_1_1i_conformer_1a5c1fc6f9bad31ec2731337e9ba1e9a0f" compoundref="i_conformer_8h" startline="31">SmolDock::iConformer::z</references>
        <referencedby refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a3abc1a2cdbb3f1b9f545f863f9ec5e43" compoundref="_conformer_rigid_docking_engine_8cpp" startline="83" endline="135">SmolDock::Engine::ConformerRigidDockingEngine::setupDockingEngine</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1afe9743bfc4876343b6c63b0aac892f83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SmolDock::Molecule::getResidueName</definition>
        <argsstring>() const</argsstring>
        <name>getResidueName</name>
        <briefdescription>
<para>Get the 3-letter residue code used for this molecule in PDB file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A 3-letter residue name string </para></simplesect>
<simplesect kind="see"><para><ref refid="class_smol_dock_1_1_molecule_1af9eb4a4fe0f1d72c104393b690e8f5cb" kindref="member">setResidueName()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="132" column="1" bodyfile="Structures/Molecule.cpp" bodystart="184" bodyend="186"/>
        <references refid="class_smol_dock_1_1_molecule_1ac20346642bc3835228726b2508d8c42f" compoundref="_molecule_8h" startline="158">residue_name</references>
        <referencedby refid="_py_structures_8h_1a18cad6e29d14a0da9d2cd9464e7e2356" compoundref="_py_structures_8cpp" startline="38" endline="83">export_Structures</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1af9eb4a4fe0f1d72c104393b690e8f5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SmolDock::Molecule::setResidueName</definition>
        <argsstring>(const std::string &amp;res_name)</argsstring>
        <name>setResidueName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>res_name</declname>
        </param>
        <briefdescription>
<para>Set the 3-letter residue code used for this molecule in PDB file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Residue name. Characters beyond the first three are ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A 3-letter residue name string </para></simplesect>
<simplesect kind="see"><para><ref refid="class_smol_dock_1_1_molecule_1af9eb4a4fe0f1d72c104393b690e8f5cb" kindref="member">setResidueName()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="140" column="1" bodyfile="Structures/Molecule.cpp" bodystart="188" bodyend="191"/>
        <references refid="class_smol_dock_1_1_molecule_1ac20346642bc3835228726b2508d8c42f" compoundref="_molecule_8h" startline="158">residue_name</references>
        <referencedby refid="_py_structures_8h_1a18cad6e29d14a0da9d2cd9464e7e2356" compoundref="_py_structures_8cpp" startline="38" endline="83">export_Structures</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1af6263934134836e9ce66d2254b6b6801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SmolDock::Molecule::updateAtomPositionsFromiConformer</definition>
        <argsstring>(const iConformer &amp;conformer)</argsstring>
        <name>updateAtomPositionsFromiConformer</name>
        <param>
          <type>const <ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref> &amp;</type>
          <declname>conformer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="142" column="1" bodyfile="Structures/Molecule.cpp" bodystart="324" bodyend="334"/>
        <references refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" compoundref="_molecule_8h" startline="151">atoms</references>
        <references refid="struct_smol_dock_1_1i_conformer_1a45c379f6a880da313bf3519dc415e992" compoundref="i_conformer_8h" startline="31">SmolDock::iConformer::x</references>
        <references refid="struct_smol_dock_1_1i_conformer_1ac3019c0cd62660a4392591dd9519cc9a" compoundref="i_conformer_8h" startline="31">SmolDock::iConformer::y</references>
        <references refid="struct_smol_dock_1_1i_conformer_1a5c1fc6f9bad31ec2731337e9ba1e9a0f" compoundref="i_conformer_8h" startline="31">SmolDock::iConformer::z</references>
        <referencedby refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a52fa8c276c911df08d4dd8d6744ae540" compoundref="_conformer_rigid_docking_engine_8cpp" startline="203" endline="212">SmolDock::Engine::ConformerRigidDockingEngine::getDockingResult</referencedby>
        <referencedby refid="class_smol_dock_1_1_intermediate_conformer_collector_1a1d878b323a17e56169fb4fad4f92a742" compoundref="_intermediate_conformer_collector_8cpp" startline="13" endline="17">SmolDock::IntermediateConformerCollector::addiConformer</referencedby>
        <referencedby refid="_py_structures_8h_1a18cad6e29d14a0da9d2cd9464e7e2356" compoundref="_py_structures_8cpp" startline="38" endline="83">export_Structures</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1a70156ffc4081eb92f9dc4e2c70096c84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_smol_dock_1_1_molecule" kindref="compound">Molecule</ref></type>
        <definition>Molecule SmolDock::Molecule::deepcopy</definition>
        <argsstring>()</argsstring>
        <name>deepcopy</name>
        <briefdescription>
<para>Make a copy of the <ref refid="class_smol_dock_1_1_molecule" kindref="compound">Molecule</ref> object where the underlying <ref refid="class_smol_dock_1_1_atom" kindref="compound">Atom</ref> and <ref refid="class_smol_dock_1_1_bond" kindref="compound">Bond</ref> are new objects instead of references to. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="class_smol_dock_1_1_molecule" kindref="compound">Molecule</ref> object with copied values </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="148" column="1" bodyfile="Structures/Molecule.cpp" bodystart="336" bodyend="379"/>
        <references refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" compoundref="_molecule_8h" startline="151">atoms</references>
        <references refid="class_smol_dock_1_1_molecule_1a18d9793aa2e080c9cefdc22afd40f314" compoundref="_molecule_8h" startline="152">bonds</references>
        <references refid="class_smol_dock_1_1_atom_1af45fc99da6ffbf539ba654c91e1bb752" compoundref="_atom_8h" startline="153">SmolDock::Atom::bonds</references>
        <references refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" compoundref="_molecule_8h" startline="154">rwmol</references>
        <references refid="class_smol_dock_1_1_bond_1a4ebf28309120c880429f205edf67b9f8" compoundref="_bond_8cpp" startline="56" endline="58">SmolDock::Bond::setBondType</references>
        <referencedby refid="class_smol_dock_1_1_engine_1_1_conformer_rigid_docking_engine_1a52fa8c276c911df08d4dd8d6744ae540" compoundref="_conformer_rigid_docking_engine_8cpp" startline="203" endline="212">SmolDock::Engine::ConformerRigidDockingEngine::getDockingResult</referencedby>
        <referencedby refid="class_smol_dock_1_1_intermediate_conformer_collector_1a1d878b323a17e56169fb4fad4f92a742" compoundref="_intermediate_conformer_collector_8cpp" startline="13" endline="17">SmolDock::IntermediateConformerCollector::addiConformer</referencedby>
        <referencedby refid="_py_structures_8h_1a18cad6e29d14a0da9d2cd9464e7e2356" compoundref="_py_structures_8cpp" startline="38" endline="83">export_Structures</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_smol_dock_1_1_molecule_1ad55fef0289e5fd81b58946638b212b76" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SmolDock::Molecule::populateInternalAtomAndBondFromRWMol</definition>
        <argsstring>(unsigned int seed)</argsstring>
        <name>populateInternalAtomAndBondFromRWMol</name>
        <param>
          <type>unsigned int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
<para>Use this if using RDKit RWMol as entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Structures/Molecule.h" line="161" column="1" bodyfile="Structures/Molecule.cpp" bodystart="193" bodyend="322"/>
        <references refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" compoundref="_molecule_8h" startline="151">atoms</references>
        <references refid="class_smol_dock_1_1_molecule_1a18d9793aa2e080c9cefdc22afd40f314" compoundref="_molecule_8h" startline="152">bonds</references>
        <references refid="class_smol_dock_1_1_atom_1a57e9a532fd04e1846c0d83edebb9fd41ae1b832c8857262f1089376030b4298b3">SmolDock::Atom::carbon</references>
        <references refid="class_smol_dock_1_1_atom_1a57e9a532fd04e1846c0d83edebb9fd41ad4ac1478a4d8a4f591d35e3d75f3de65">SmolDock::Atom::hydrogen</references>
        <references refid="class_smol_dock_1_1_molecule_1a008c28b068bf77dc74cc41926ee24507" compoundref="_molecule_8h" startline="163">initial_conformer_id</references>
        <references refid="class_smol_dock_1_1_atom_1a57e9a532fd04e1846c0d83edebb9fd41a63ebb9250f49340aece8d4ac541eaf61">SmolDock::Atom::nitrogen</references>
        <references refid="class_smol_dock_1_1_atom_1a57e9a532fd04e1846c0d83edebb9fd41a6124d98749365e3db2c9e5b27ca04db6">SmolDock::Atom::oxygen</references>
        <references refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" compoundref="_molecule_8h" startline="154">rwmol</references>
        <referencedby refid="class_smol_dock_1_1_molecule_1a46a03e954e99f150a1503ee0d5083da7" compoundref="_molecule_8cpp" startline="41" endline="67">populateFromSMILES</referencedby>
        <referencedby refid="class_smol_dock_1_1_molecule_1a4ae176fc96acfab443a13ba50882a849" compoundref="_molecule_8cpp" startline="163" endline="182">populateFromPDB</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class representing &quot;rich&quot; molecule. </para>    </briefdescription>
    <detaileddescription>
<para>Contains all extended attributes and functions. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="141">
        <label>SmolDock::Molecule</label>
        <link refid="class_smol_dock_1_1_molecule"/>
        <childnode refid="142" relation="private-inheritance">
        </childnode>
      </node>
      <node id="142">
        <label>SmolDock::Structure</label>
        <link refid="class_smol_dock_1_1_structure"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="147">
        <label>T</label>
      </node>
      <node id="143">
        <label>SmolDock::Molecule</label>
        <link refid="class_smol_dock_1_1_molecule"/>
        <childnode refid="144" relation="private-inheritance">
        </childnode>
        <childnode refid="145" relation="usage">
          <edgelabel>-bonds</edgelabel>
        </childnode>
        <childnode refid="148" relation="usage">
          <edgelabel>-smiles</edgelabel>
          <edgelabel>-residue_name</edgelabel>
        </childnode>
        <childnode refid="150" relation="usage">
          <edgelabel>-atoms</edgelabel>
        </childnode>
      </node>
      <node id="145">
        <label>std::vector&lt; std::shared_ptr&lt; SmolDock::Bond &gt; &gt;</label>
        <childnode refid="146" relation="template-instance">
          <edgelabel>&lt; std::shared_ptr&lt; SmolDock::Bond &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="146">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="147" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="144">
        <label>SmolDock::Structure</label>
        <link refid="class_smol_dock_1_1_structure"/>
      </node>
      <node id="149">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="150">
        <label>std::vector&lt; std::shared_ptr&lt; SmolDock::Atom &gt; &gt;</label>
        <childnode refid="146" relation="template-instance">
          <edgelabel>&lt; std::shared_ptr&lt; SmolDock::Atom &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="148">
        <label>std::string</label>
        <childnode refid="149" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Structures/Molecule.h" line="54" column="1" bodyfile="Structures/Molecule.h" bodystart="54" bodyend="165"/>
    <listofallmembers>
      <member refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" prot="private" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>atoms</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a18d9793aa2e080c9cefdc22afd40f314" prot="private" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>bonds</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a70156ffc4081eb92f9dc4e2c70096c84" prot="public" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>deepcopy</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a449f37f171474849ad896e33dfc9e2f4" prot="public" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>generateConformer</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a2767177fabc41b3aeaa68c77d8addd1b" prot="public" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>generateConformers</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a9aba4607923da552cf15847567c77603" prot="public" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>getInitialConformer</name></member>
      <member refid="class_smol_dock_1_1_molecule_1afe9743bfc4876343b6c63b0aac892f83" prot="public" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>getResidueName</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a008c28b068bf77dc74cc41926ee24507" prot="private" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>initial_conformer_id</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a3a4a39128d64413d79d857bcbf790163" prot="public" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>Molecule</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a2033be89cdf71e3c8750054d8d19425f" prot="private" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>MoleculeTraversal</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a7dc0c882da26261dcd2762429b07a3d4" prot="public" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>numberOfAtoms</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a8b1f02ad4e3b2ad991162668a61c2ddc" prot="public" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>numberOfBonds</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a21986fb82cbece6c57579a68c1bf5f39" prot="private" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>PDBWriter</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a4ae176fc96acfab443a13ba50882a849" prot="public" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>populateFromPDB</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a46a03e954e99f150a1503ee0d5083da7" prot="public" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>populateFromSMILES</name></member>
      <member refid="class_smol_dock_1_1_molecule_1ad55fef0289e5fd81b58946638b212b76" prot="private" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>populateInternalAtomAndBondFromRWMol</name></member>
      <member refid="class_smol_dock_1_1_molecule_1ac20346642bc3835228726b2508d8c42f" prot="private" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>residue_name</name></member>
      <member refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" prot="private" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>rwmol</name></member>
      <member refid="class_smol_dock_1_1_molecule_1af9eb4a4fe0f1d72c104393b690e8f5cb" prot="public" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>setResidueName</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a59288faa4bbacab2959858b398cb459e" prot="private" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>smiles</name></member>
      <member refid="class_smol_dock_1_1_molecule_1a3cb039460aae8734c10a3588e1d670a2" prot="private" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>UnitTestHelper</name></member>
      <member refid="class_smol_dock_1_1_molecule_1af6263934134836e9ce66d2254b6b6801" prot="public" virt="non-virtual"><scope>SmolDock::Molecule</scope><name>updateAtomPositionsFromiConformer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
