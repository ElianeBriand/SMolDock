<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_variant_flag_assignation_8h" kind="file" language="C++">
    <compoundname>VariantFlagAssignation.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">memory</includes>
    <includes refid="_p_d_b_residue_variant_table_8h" local="no">Structures/Common/PDBResidueVariantTable.h</includes>
    <includes refid="_atom_8h" local="no">Structures/Atom.h</includes>
    <includedby refid="_variant_flag_assignation_8cpp" local="yes">VariantFlagAssignation.cpp</includedby>
    <includedby refid="_protein_8cpp" local="yes">Protein.cpp</includedby>
    <incdepgraph>
      <node id="1860">
        <label>string</label>
      </node>
      <node id="1865">
        <label>Structures/Atom.h</label>
        <link refid="_atom_8h"/>
        <childnode refid="1855" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
        <childnode refid="1858" relation="include">
        </childnode>
        <childnode refid="1862" relation="include">
        </childnode>
        <childnode refid="1866" relation="include">
        </childnode>
        <childnode refid="1861" relation="include">
        </childnode>
      </node>
      <node id="1864">
        <label>map</label>
      </node>
      <node id="1857">
        <label>Structures/Common/PDBResidueVariantTable.h</label>
        <link refid="_p_d_b_residue_variant_table_8h"/>
        <childnode refid="1858" relation="include">
        </childnode>
        <childnode refid="1859" relation="include">
        </childnode>
        <childnode refid="1855" relation="include">
        </childnode>
        <childnode refid="1860" relation="include">
        </childnode>
        <childnode refid="1861" relation="include">
        </childnode>
        <childnode refid="1865" relation="include">
        </childnode>
      </node>
      <node id="1861">
        <label>Structures/AminoAcid.h</label>
        <link refid="_amino_acid_8h"/>
        <childnode refid="1860" relation="include">
        </childnode>
        <childnode refid="1855" relation="include">
        </childnode>
        <childnode refid="1858" relation="include">
        </childnode>
        <childnode refid="1862" relation="include">
        </childnode>
        <childnode refid="1859" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
        <childnode refid="1863" relation="include">
        </childnode>
      </node>
      <node id="1859">
        <label>tuple</label>
      </node>
      <node id="1863">
        <label>Engines/Internals/iProtein.h</label>
        <link refid="i_protein_8h"/>
        <childnode refid="1855" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
        <childnode refid="1864" relation="include">
        </childnode>
      </node>
      <node id="1855">
        <label>vector</label>
      </node>
      <node id="1866">
        <label>iostream</label>
      </node>
      <node id="1854">
        <label>VariantFlagAssignation.h</label>
        <link refid="_variant_flag_assignation_8h"/>
        <childnode refid="1855" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
        <childnode refid="1857" relation="include">
        </childnode>
        <childnode refid="1865" relation="include">
        </childnode>
      </node>
      <node id="1858">
        <label>set</label>
      </node>
      <node id="1862">
        <label>algorithm</label>
      </node>
      <node id="1856">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1868">
        <label>VariantFlagAssignation.cpp</label>
        <link refid="_variant_flag_assignation_8cpp"/>
      </node>
      <node id="1867">
        <label>VariantFlagAssignation.h</label>
        <link refid="_variant_flag_assignation_8h"/>
        <childnode refid="1868" relation="include">
        </childnode>
        <childnode refid="1869" relation="include">
        </childnode>
      </node>
      <node id="1869">
        <label>Protein.cpp</label>
        <link refid="_protein_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespace_smol_dock">SmolDock</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Eliane<sp/>Briand</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>SmolDock.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>SmolDock<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SmolDock<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>SmolDock.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SMOLDOCK_VARIANTFLAGASSIGNATION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMOLDOCK_VARIANTFLAGASSIGNATION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_p_d_b_residue_variant_table_8h" kindref="compound">Structures/Common/PDBResidueVariantTable.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_atom_8h" kindref="compound">Structures/Atom.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_smol_dock" kindref="compound">SmolDock</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_smol_dock_1a43bbd3ed0ad4b1eec9e5ae8d9d99318d" kindref="member">assignApolarCarbonFlag</ref>(std::vector&lt;Atom&gt;&amp;<sp/>atomVect);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_smol_dock_1a2820b77a3fd140cd601c75028ed8dd51" kindref="member">assignVariantFlagsForResidueAtom</ref>(AminoAcid&amp;<sp/>residue,<sp/><ref refid="namespace_smol_dock_1ab797122db8030eb70bf4d042c897df5e" kindref="member">PDBResidueVariantAssignationType</ref><sp/>assignation_type<sp/>=<sp/><ref refid="namespace_smol_dock_1ab797122db8030eb70bf4d042c897df5eab7f023dbb86242b37e451d0b36dde93d" kindref="member">PDBResidueVariantAssignationType::GeneralPurpose</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//SMOLDOCK_VARIANTFLAGASSIGNATION_H</highlight></codeline>
    </programlisting>
    <location file="Structures/Common/VariantFlagAssignation.h"/>
  </compounddef>
</doxygen>
