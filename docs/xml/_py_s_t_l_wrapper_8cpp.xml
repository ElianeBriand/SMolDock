<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_py_s_t_l_wrapper_8cpp" kind="file" language="C++">
    <compoundname>PySTLWrapper.cpp</compoundname>
    <includes refid="_py_s_t_l_wrapper_8h" local="yes">PySTLWrapper.h</includes>
    <includes local="no">boost/python.hpp</includes>
    <includes local="no">boost/numpy.hpp</includes>
    <includes local="no">boost/python/suite/indexing/indexing_suite.hpp</includes>
    <includes local="no">boost/python/suite/indexing/vector_indexing_suite.hpp</includes>
    <includes refid="_molecule_8h" local="no">Structures/Molecule.h</includes>
    <includes refid="_vina_compatibility_post_processor_8h" local="no">Structures/InputPostProcessors/VinaCompatibilityPostProcessor.h</includes>
    <incdepgraph>
      <node id="1481">
        <label>GraphMol/RWMol.h</label>
      </node>
      <node id="1482">
        <label>GraphMol/MolOps.h</label>
      </node>
      <node id="1485">
        <label>GraphMol/Substruct/SubstructMatch.h</label>
      </node>
      <node id="1473">
        <label>PySTLWrapper.h</label>
        <link refid="_py_s_t_l_wrapper_8h"/>
      </node>
      <node id="1503">
        <label>cmath</label>
      </node>
      <node id="1504">
        <label>cassert</label>
      </node>
      <node id="1472">
        <label>PySTLWrapper.cpp</label>
        <link refid="_py_s_t_l_wrapper_8cpp"/>
        <childnode refid="1473" relation="include">
        </childnode>
        <childnode refid="1474" relation="include">
        </childnode>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1476" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1505" relation="include">
        </childnode>
      </node>
      <node id="1486">
        <label>GraphMol/DistGeomHelpers/Embedder.h</label>
      </node>
      <node id="1487">
        <label>Structures/InputPostProcessors/InputPostProcessorInterface.h</label>
        <link refid="_input_post_processor_interface_8h"/>
        <childnode refid="1488" relation="include">
        </childnode>
      </node>
      <node id="1476">
        <label>boost/python/suite/indexing/indexing_suite.hpp</label>
      </node>
      <node id="1494">
        <label>string</label>
      </node>
      <node id="1488">
        <label>Structures/Atom.h</label>
        <link refid="_atom_8h"/>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1490" relation="include">
        </childnode>
        <childnode refid="1491" relation="include">
        </childnode>
        <childnode refid="1492" relation="include">
        </childnode>
        <childnode refid="1493" relation="include">
        </childnode>
      </node>
      <node id="1497">
        <label>map</label>
      </node>
      <node id="1475">
        <label>boost/numpy.hpp</label>
      </node>
      <node id="1500">
        <label>../Engines/Internals/iConformer.h</label>
        <link refid="i_conformer_8h"/>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1501" relation="include">
        </childnode>
      </node>
      <node id="1499">
        <label>Bond.h</label>
        <link refid="_bond_8h"/>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1488" relation="include">
        </childnode>
      </node>
      <node id="1493">
        <label>AminoAcid.h</label>
        <link refid="_amino_acid_8h"/>
        <childnode refid="1494" relation="include">
        </childnode>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1490" relation="include">
        </childnode>
        <childnode refid="1491" relation="include">
        </childnode>
        <childnode refid="1495" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1496" relation="include">
        </childnode>
      </node>
      <node id="1495">
        <label>tuple</label>
      </node>
      <node id="1496">
        <label>Engines/Internals/iProtein.h</label>
        <link refid="i_protein_8h"/>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1497" relation="include">
        </childnode>
      </node>
      <node id="1474">
        <label>boost/python.hpp</label>
      </node>
      <node id="1501">
        <label>iTransform.h</label>
        <link refid="i_transform_8h"/>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
        <childnode refid="1504" relation="include">
        </childnode>
      </node>
      <node id="1479">
        <label>vector</label>
      </node>
      <node id="1502">
        <label>array</label>
      </node>
      <node id="1484">
        <label>GraphMol/SmilesParse/SmilesParse.h</label>
      </node>
      <node id="1498">
        <label>Structure.h</label>
        <link refid="_structure_8h"/>
      </node>
      <node id="1478">
        <label>Structures/Molecule.h</label>
        <link refid="_molecule_8h"/>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1481" relation="include">
        </childnode>
        <childnode refid="1482" relation="include">
        </childnode>
        <childnode refid="1483" relation="include">
        </childnode>
        <childnode refid="1484" relation="include">
        </childnode>
        <childnode refid="1485" relation="include">
        </childnode>
        <childnode refid="1486" relation="include">
        </childnode>
        <childnode refid="1487" relation="include">
        </childnode>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1488" relation="include">
        </childnode>
        <childnode refid="1499" relation="include">
        </childnode>
        <childnode refid="1500" relation="include">
        </childnode>
      </node>
      <node id="1480">
        <label>GraphMol/RDKitBase.h</label>
      </node>
      <node id="1492">
        <label>iostream</label>
      </node>
      <node id="1477">
        <label>boost/python/suite/indexing/vector_indexing_suite.hpp</label>
      </node>
      <node id="1490">
        <label>set</label>
      </node>
      <node id="1505">
        <label>Structures/InputPostProcessors/VinaCompatibilityPostProcessor.h</label>
        <link refid="_vina_compatibility_post_processor_8h"/>
        <childnode refid="1487" relation="include">
        </childnode>
      </node>
      <node id="1491">
        <label>algorithm</label>
      </node>
      <node id="1489">
        <label>memory</label>
      </node>
      <node id="1483">
        <label>GraphMol/FileParsers/FileParsers.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_py_s_t_l_wrapper_8cpp_1a20a4fa85d5a46ce8e1567e27ff8483c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; sd::InputPostProcessor::InputPostProcessor &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt;sd::InputPostProcessor::InputPostProcessor&gt; &gt; getVinaPostProcessorsVector</definition>
        <argsstring>()</argsstring>
        <name>getVinaPostProcessorsVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Frontends/Python/PySTLWrapper.cpp" line="40" column="1" bodyfile="Frontends/Python/PySTLWrapper.cpp" bodystart="40" bodyend="45"/>
        <referencedby refid="_py_s_t_l_wrapper_8h_1a168320ae6ebe56579c717093cbb24708" compoundref="_py_s_t_l_wrapper_8cpp" startline="48" endline="58">export_STLWrapper</referencedby>
      </memberdef>
      <memberdef kind="function" id="_py_s_t_l_wrapper_8cpp_1a168320ae6ebe56579c717093cbb24708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void export_STLWrapper</definition>
        <argsstring>()</argsstring>
        <name>export_STLWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Frontends/Python/PySTLWrapper.cpp" line="48" column="1" bodyfile="Frontends/Python/PySTLWrapper.cpp" bodystart="48" bodyend="58"/>
        <references refid="_py_s_t_l_wrapper_8cpp_1a20a4fa85d5a46ce8e1567e27ff8483c1" compoundref="_py_s_t_l_wrapper_8cpp" startline="40" endline="45">getVinaPostProcessorsVector</references>
        <referencedby refid="_smoldock_python_bindings_8cpp_1a9002869529fdb857c7ffa4a170c4f3ef" compoundref="_smoldock_python_bindings_8cpp" startline="39" endline="79">BOOST_PYTHON_MODULE</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Eliane<sp/>Briand</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>SmolDock.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>SmolDock<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SmolDock<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>SmolDock.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_py_s_t_l_wrapper_8h" kindref="compound">PySTLWrapper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/numpy.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/suite/indexing/indexing_suite.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/suite/indexing/vector_indexing_suite.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_molecule_8h" kindref="compound">Structures/Molecule.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_vina_compatibility_post_processor_8h" kindref="compound">Structures/InputPostProcessors/VinaCompatibilityPostProcessor.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">p<sp/>=<sp/>boost::python;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">np<sp/>=<sp/>boost::numpy;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_smol_dock" kindref="compound">sd</ref><sp/>=<sp/><ref refid="namespace_smol_dock" kindref="compound">SmolDock</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="_py_s_t_l_wrapper_8cpp_1a20a4fa85d5a46ce8e1567e27ff8483c1" refkind="member"><highlight class="normal">std::vector&lt;<sp/>std::shared_ptr&lt;sd::InputPostProcessor::InputPostProcessor&gt;<sp/>&gt;<sp/><ref refid="_py_s_t_l_wrapper_8cpp_1a20a4fa85d5a46ce8e1567e27ff8483c1" kindref="member">getVinaPostProcessorsVector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vinaPP<sp/>=<sp/><sp/>std::make_shared&lt;sd::InputPostProcessor::VinaCompatibilityPostProcessor&gt;();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;sd::InputPostProcessor::InputPostProcessor&gt;<sp/>&gt;<sp/>postProcessors;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>postProcessors.push_back(vinaPP);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>postProcessors;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="_py_s_t_l_wrapper_8h_1a168320ae6ebe56579c717093cbb24708" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_py_s_t_l_wrapper_8cpp_1a168320ae6ebe56579c717093cbb24708" kindref="member">export_STLWrapper</ref>()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>p::class_&lt;std::vector&lt;double&gt;<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;DoubleVect&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(p::vector_indexing_suite&lt;std::vector&lt;double&gt;<sp/>&gt;());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>p::class_&lt;std::vector&lt;sd::Molecule&gt;<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;MoleculeVect&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.def(p::vector_indexing_suite&lt;std::vector&lt;sd::Molecule&gt;<sp/>&gt;())<sp/>//<sp/>We<sp/>need<sp/>Molecule::operator==<sp/>to<sp/>use<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>p::class_&lt;std::vector&lt;<sp/>std::shared_ptr&lt;sd::InputPostProcessor::InputPostProcessor&gt;<sp/>&gt;<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;PostProcessorsVector&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>p::def(</highlight><highlight class="stringliteral">&quot;getVinaPostProcessorsVector&quot;</highlight><highlight class="normal">,<sp/><ref refid="_py_s_t_l_wrapper_8cpp_1a20a4fa85d5a46ce8e1567e27ff8483c1" kindref="member">getVinaPostProcessorsVector</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Frontends/Python/PySTLWrapper.cpp"/>
  </compounddef>
</doxygen>
