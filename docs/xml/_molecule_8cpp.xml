<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.14">
    <compounddef id="_molecule_8cpp" kind="file" language="C++">
        <compoundname>Molecule.cpp</compoundname>
        <includes local="no">tuple</includes>
        <includes local="no">algorithm</includes>
        <includes refid="_molecule_8h" local="yes">Molecule.h</includes>
        <includes refid="_atom_8h" local="yes">Atom.h</includes>
        <includes refid="_p_d_b_ligand_utils_8h" local="yes">Utilities/PDBLigandUtils.h</includes>
        <includes local="no">GraphMol/Descriptors/Lipinski.h</includes>
        <includes local="no">ESBTL/default.h</includes>
        <includes local="no">ESBTL/atom_classifier.h</includes>
        <includes local="no">ESBTL/weighted_atom_iterator.h</includes>
        <includes local="no">ESBTL/compressed_ifstream.h</includes>
        <includes local="no">boost/algorithm/string.hpp</includes>
        <includes local="no">boost/log/trivial.hpp</includes>
        <includes local="no">boost/accumulators/accumulators.hpp</includes>
        <includes local="no">boost/accumulators/statistics/stats.hpp</includes>
        <includes local="no">boost/accumulators/statistics/mean.hpp</includes>
        <includes local="no">boost/accumulators/statistics/count.hpp</includes>
        <includes local="no">boost/accumulators/statistics/min.hpp</includes>
        <includes local="no">boost/accumulators/statistics/max.hpp</includes>
        <incdepgraph>
            <node id="1066">
                <label>boost/algorithm/string.hpp</label>
            </node>
            <node id="1062">
                <label>ESBTL/default.h</label>
            </node>
            <node id="1037">
                <label>GraphMol/RWMol.h</label>
            </node>
            <node id="1038">
                <label>GraphMol/MolOps.h</label>
            </node>
            <node id="1041">
                <label>GraphMol/Substruct/SubstructMatch.h</label>
            </node>
            <node id="1059">
                <label>Utilities/PDBLigandUtils.h</label>
                <link refid="_p_d_b_ligand_utils_8h"/>
                <childnode refid="1045" relation="include">
                </childnode>
                <childnode refid="1036" relation="include">
                </childnode>
                <childnode refid="1037" relation="include">
                </childnode>
                <childnode refid="1038" relation="include">
                </childnode>
                <childnode refid="1040" relation="include">
                </childnode>
                <childnode refid="1060" relation="include">
                </childnode>
                <childnode refid="1041" relation="include">
                </childnode>
            </node>
            <node id="1057">
                <label>cmath</label>
            </node>
            <node id="1071">
                <label>boost/accumulators/statistics/count.hpp</label>
            </node>
            <node id="1061">
                <label>GraphMol/Descriptors/Lipinski.h</label>
            </node>
            <node id="1058">
                <label>cassert</label>
            </node>
            <node id="1042">
                <label>GraphMol/DistGeomHelpers/Embedder.h</label>
            </node>
            <node id="1043">
                <label>Structures/InputPostProcessors/InputPostProcessorInterface.h</label>
                <link refid="_input_post_processor_interface_8h"/>
                <childnode refid="1044" relation="include">
                </childnode>
            </node>
            <node id="1049">
                <label>string</label>
            </node>
            <node id="1065">
                <label>ESBTL/compressed_ifstream.h</label>
            </node>
            <node id="1044">
                <label>Structures/Atom.h</label>
                <link refid="_atom_8h"/>
                <childnode refid="1035" relation="include">
                </childnode>
                <childnode refid="1045" relation="include">
                </childnode>
                <childnode refid="1046" relation="include">
                </childnode>
                <childnode refid="1033" relation="include">
                </childnode>
                <childnode refid="1047" relation="include">
                </childnode>
                <childnode refid="1048" relation="include">
                </childnode>
            </node>
            <node id="1051">
                <label>map</label>
            </node>
            <node id="1054">
                <label>../Engines/Internals/iConformer.h</label>
                <link refid="i_conformer_8h"/>
                <childnode refid="1035" relation="include">
                </childnode>
                <childnode refid="1045" relation="include">
                </childnode>
                <childnode refid="1055" relation="include">
                </childnode>
            </node>
            <node id="1067">
                <label>boost/log/trivial.hpp</label>
            </node>
            <node id="1031">
                <label>Molecule.cpp</label>
                <link refid="_molecule_8cpp"/>
                <childnode refid="1032" relation="include">
                </childnode>
                <childnode refid="1033" relation="include">
                </childnode>
                <childnode refid="1034" relation="include">
                </childnode>
                <childnode refid="1044" relation="include">
                </childnode>
                <childnode refid="1059" relation="include">
                </childnode>
                <childnode refid="1061" relation="include">
                </childnode>
                <childnode refid="1062" relation="include">
                </childnode>
                <childnode refid="1063" relation="include">
                </childnode>
                <childnode refid="1064" relation="include">
                </childnode>
                <childnode refid="1065" relation="include">
                </childnode>
                <childnode refid="1066" relation="include">
                </childnode>
                <childnode refid="1067" relation="include">
                </childnode>
                <childnode refid="1068" relation="include">
                </childnode>
                <childnode refid="1069" relation="include">
                </childnode>
                <childnode refid="1070" relation="include">
                </childnode>
                <childnode refid="1071" relation="include">
                </childnode>
                <childnode refid="1072" relation="include">
                </childnode>
                <childnode refid="1073" relation="include">
                </childnode>
            </node>
            <node id="1053">
                <label>Bond.h</label>
                <link refid="_bond_8h"/>
                <childnode refid="1045" relation="include">
                </childnode>
                <childnode refid="1044" relation="include">
                </childnode>
            </node>
            <node id="1072">
                <label>boost/accumulators/statistics/min.hpp</label>
            </node>
            <node id="1070">
                <label>boost/accumulators/statistics/mean.hpp</label>
            </node>
            <node id="1063">
                <label>ESBTL/atom_classifier.h</label>
            </node>
            <node id="1073">
                <label>boost/accumulators/statistics/max.hpp</label>
            </node>
            <node id="1048">
                <label>AminoAcid.h</label>
                <link refid="_amino_acid_8h"/>
                <childnode refid="1049" relation="include">
                </childnode>
                <childnode refid="1035" relation="include">
                </childnode>
                <childnode refid="1046" relation="include">
                </childnode>
                <childnode refid="1033" relation="include">
                </childnode>
                <childnode refid="1032" relation="include">
                </childnode>
                <childnode refid="1045" relation="include">
                </childnode>
                <childnode refid="1050" relation="include">
                </childnode>
            </node>
            <node id="1032">
                <label>tuple</label>
            </node>
            <node id="1050">
                <label>Engines/Internals/iProtein.h</label>
                <link refid="i_protein_8h"/>
                <childnode refid="1035" relation="include">
                </childnode>
                <childnode refid="1045" relation="include">
                </childnode>
                <childnode refid="1051" relation="include">
                </childnode>
            </node>
            <node id="1055">
                <label>iTransform.h</label>
                <link refid="i_transform_8h"/>
                <childnode refid="1035" relation="include">
                </childnode>
                <childnode refid="1045" relation="include">
                </childnode>
                <childnode refid="1056" relation="include">
                </childnode>
                <childnode refid="1057" relation="include">
                </childnode>
                <childnode refid="1058" relation="include">
                </childnode>
            </node>
            <node id="1035">
                <label>vector</label>
            </node>
            <node id="1068">
                <label>boost/accumulators/accumulators.hpp</label>
            </node>
            <node id="1056">
                <label>array</label>
            </node>
            <node id="1040">
                <label>GraphMol/SmilesParse/SmilesParse.h</label>
            </node>
            <node id="1052">
                <label>Structure.h</label>
                <link refid="_structure_8h"/>
            </node>
            <node id="1034">
                <label>Molecule.h</label>
                <link refid="_molecule_8h"/>
                <childnode refid="1035" relation="include">
                </childnode>
                <childnode refid="1036" relation="include">
                </childnode>
                <childnode refid="1037" relation="include">
                </childnode>
                <childnode refid="1038" relation="include">
                </childnode>
                <childnode refid="1039" relation="include">
                </childnode>
                <childnode refid="1040" relation="include">
                </childnode>
                <childnode refid="1041" relation="include">
                </childnode>
                <childnode refid="1042" relation="include">
                </childnode>
                <childnode refid="1043" relation="include">
                </childnode>
                <childnode refid="1052" relation="include">
                </childnode>
                <childnode refid="1044" relation="include">
                </childnode>
                <childnode refid="1053" relation="include">
                </childnode>
                <childnode refid="1054" relation="include">
                </childnode>
            </node>
            <node id="1036">
                <label>GraphMol/RDKitBase.h</label>
            </node>
            <node id="1047">
                <label>iostream</label>
            </node>
            <node id="1060">
                <label>GraphMol/SmilesParse/SmilesWrite.h</label>
            </node>
            <node id="1069">
                <label>boost/accumulators/statistics/stats.hpp</label>
            </node>
            <node id="1046">
                <label>set</label>
            </node>
            <node id="1033">
                <label>algorithm</label>
            </node>
            <node id="1064">
                <label>ESBTL/weighted_atom_iterator.h</label>
            </node>
            <node id="1045">
                <label>memory</label>
            </node>
            <node id="1039">
                <label>GraphMol/FileParsers/FileParsers.h</label>
            </node>
        </incdepgraph>
        <innernamespace refid="namespace_smol_dock">SmolDock</innernamespace>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="comment">/*</highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Eliane<sp/>Briand
                </highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="comment"><sp/>*
                </highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>SmolDock.
                </highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="comment"><sp/>*
                </highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="comment"><sp/>*<sp/>SmolDock<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>
                    redistribute<sp/>it<sp/>and/or<sp/>modify
                </highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General
                    <sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by
                </highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version
                    <sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or
                </highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.
                </highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="comment"><sp/>*
                </highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="comment"><sp/>*<sp/>SmolDock<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that
                    <sp/>it<sp/>will<sp/>be<sp/>useful,
                </highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the
                    <sp/>implied<sp/>warranty<sp/>of
                </highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR
                    <sp/>PURPOSE.
                    <sp/>
                    <sp/>See<sp/>the
                </highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>
                    details.
                </highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="comment"><sp/>*
                </highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the
                    <sp/>GNU<sp/>General<sp/>Public<sp/>License
                </highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>SmolDock.
                    <sp/>
                    <sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.
                </highlight>
            </codeline>
            <codeline lineno="18">
                <highlight class="comment"><sp/>*
                </highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="comment"><sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;tuple&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="_molecule_8h" kindref="compound">
                    Molecule.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="_atom_8h" kindref="compound">Atom.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_d_b_ligand_utils_8h"
                                                                        kindref="compound">
                    Utilities/PDBLigandUtils.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;GraphMol/Descriptors/Lipinski.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;ESBTL/default.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;ESBTL/atom_classifier.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;ESBTL/weighted_atom_iterator.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;ESBTL/compressed_ifstream.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string.hpp&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;boost/log/trivial.hpp&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;boost/accumulators/accumulators.hpp&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="40">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;boost/accumulators/statistics/stats.hpp&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;boost/accumulators/statistics/mean.hpp&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;boost/accumulators/statistics/count.hpp&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;boost/accumulators/statistics/min.hpp&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;boost/accumulators/statistics/max.hpp&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal"></highlight>
                <highlight class="keyword">namespace
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="namespace_smol_dock" kindref="compound">SmolDock</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a3a4a39128d64413d79d857bcbf790163" kindref="member">
                        Molecule::Molecule</ref>()<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keywordflow">default</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="51" refid="class_smol_dock_1_1_molecule_1ae8bf900e52a73637051eee69e60628e6"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1ae8bf900e52a73637051eee69e60628e6" kindref="member">
                        Molecule::populateFromSMILES</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::string<sp/>&amp;smiles,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>seed,
                </highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::vector&lt;<sp/>std::shared_ptr&lt;InputPostProcessor::InputPostProcessor&gt;<sp/>&gt;<sp/>
                    postProcessors)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RDKit::RWMol<sp/>*a<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">nullptr</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">try</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>This<sp/>can<sp/>throw<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>a<sp/>=<sp/>RDKit::SmilesToMol(<ref
                        refid="class_smol_dock_1_1_molecule_1a59288faa4bbacab2959858b398cb459e" kindref="member">
                    smiles</ref>);
                </highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">catch</highlight>
                <highlight class="normal"><sp/>(...)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="59">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>a<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">nullptr</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(a<sp/>==
                    <sp/>
                </highlight>
                <highlight class="keyword">nullptr</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BOOST_LOG_TRIVIAL(error)<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Error<sp/>in<sp/>constructor<sp/>Molecule::Molecule(const<sp/>
                    std::string<sp/>&amp;smiles)&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BOOST_LOG_TRIVIAL(error)<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;for<sp/>smiles<sp/>=<sp/>&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a59288faa4bbacab2959858b398cb459e" kindref="member">
                        smiles</ref>;
                </highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BOOST_LOG_TRIVIAL(error)<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;The<sp/>SMILES<sp/>string<sp/>was<sp/>not<sp/>correctly<sp/>
                    parsed<sp/>by<sp/>RDKit.&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BOOST_LOG_TRIVIAL(error)
                </highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;This<sp/>often<sp/>indicated<sp/>a<sp/>malformed<sp/>SMILES.<sp/>
                    (but<sp/>not<sp/>always,<sp/>RDKit<sp/>has<sp/>parsing<sp/>bugs)&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;<ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5"
                                       kindref="member">rwmol</ref>.reset(a);
                </highlight>
            </codeline>
            <codeline lineno="71">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="72">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a919f8706ff2f2beb3f7bf8d53f4c3f96" kindref="member">
                    populateInternalAtomAndBondFromRWMol</ref>(seed,<sp/>postProcessors)<sp/>==
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="73">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="74">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;smiles<sp/>=
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a59288faa4bbacab2959858b398cb459e" kindref="member">
                        smiles</ref>;
                </highlight>
            </codeline>
            <codeline lineno="76">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="79">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="81" refid="class_smol_dock_1_1_molecule_1ad10dcbd80a2ac181b3d76fbae3f90ca2"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1ad10dcbd80a2ac181b3d76fbae3f90ca2" kindref="member">
                        Molecule::generateConformer</ref>(
                    <ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref>
                    <sp/>&amp;conformer,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>centroidNormalization,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>seed)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="82">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="83">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Hydrogen<sp/>added<sp/>for<sp/>conformer<sp/>gen
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="84">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RDKit::MolOps::addHs(*<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>);
                </highlight>
            </codeline>
            <codeline lineno="85">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>conformer_id<sp/>=<sp/>RDKit::DGeomHelpers::EmbedMolecule(*<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>,<sp/>10,<sp/>seed,
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="86">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RDKit::MolOps::removeHs(*<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>);
                </highlight>
            </codeline>
            <codeline lineno="87">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="88">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(conformer_id<sp/>==<sp/>-1)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Failed<sp/>to<sp/>generate
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="89">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="90">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="91">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer<sp/>=
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a5247ebed094d5593a5a704c0c2919c0c" kindref="member">
                        generateIConformerForGivenRDKitConformerID</ref>(conformer_id);
                </highlight>
            </codeline>
            <codeline lineno="92">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="93">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="94">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="95">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="96">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="97" refid="class_smol_dock_1_1_molecule_1a1cce96a4a5296ab42ae3ab06fbc374a1"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a1cce96a4a5296ab42ae3ab06fbc374a1" kindref="member">
                        Molecule::generateConformers</ref>(std::vector&lt;iConformer&gt;<sp/>&amp;viConformers,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>num,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>centroidNormalization,
                </highlight>
            </codeline>
            <codeline lineno="98">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>seed)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="99">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="100">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RDKit::MolOps::addHs(*<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>);
                </highlight>
            </codeline>
            <codeline lineno="101">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::vector&lt;int&gt;<sp/>conformer_ids<sp/>=<sp/>
                    RDKit::DGeomHelpers::EmbedMultipleConfs(*<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>,
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Molecule
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>num,
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Num<sp/>of<sp/>conformer
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>30,
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Max<sp/>attempts
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>seed,
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>RNG<sp/>seed
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Erase<sp/>existing<sp/>conformer
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RDKit::MolOps::removeHs(*<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>);
                </highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="108">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(conformer_ids.size()<sp/>==<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Early<sp/>failure<sp/>case
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="112">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>viConformers.reserve(viConformers.capacity()<sp/>+<sp/>conformer_ids.size()<sp/>+<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="113">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="114">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>rdkit_first_conformer_id<sp/>=<sp/>(*(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>-&gt;beginConformers()))-&gt;getId();
                </highlight>
            </codeline>
            <codeline lineno="115">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref>
                    <sp/>conformer_initial<sp/>=<sp/>this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a5247ebed094d5593a5a704c0c2919c0c" kindref="member">
                    generateIConformerForGivenRDKitConformerID</ref>(rdkit_first_conformer_id,<sp/>
                    centroidNormalization);
                </highlight>
            </codeline>
            <codeline lineno="116">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>viConformers.push_back(conformer_initial);
                </highlight>
            </codeline>
            <codeline lineno="117">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="118">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//*<sp/>//<sp/>FIXME<sp/>:<sp/>uncomment<sp/>this<sp/>after<sp/>fixing<sp/>
                    scoring<sp/>function,<sp/>and<sp/>remove<sp/>the<sp/>initial<sp/>conformer
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="119">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>:<sp/>conformer_ids)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="120">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref>
                    <sp/>conformer<sp/>=<sp/>this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a5247ebed094d5593a5a704c0c2919c0c" kindref="member">
                    generateIConformerForGivenRDKitConformerID</ref>(i,<sp/>centroidNormalization);
                </highlight>
            </codeline>
            <codeline lineno="121">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>viConformers.push_back(conformer);
                </highlight>
            </codeline>
            <codeline lineno="122">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="123">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//*/</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="124">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="125">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="126">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>conformer_ids.size();
                </highlight>
            </codeline>
            <codeline lineno="127">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="128">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="129" refid="class_smol_dock_1_1_molecule_1a7dc0c882da26261dcd2762429b07a3d4"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a7dc0c882da26261dcd2762429b07a3d4" kindref="member">
                        Molecule::numberOfAtoms</ref>()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="130">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                        atoms</ref>.size();
                </highlight>
            </codeline>
            <codeline lineno="131">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="132">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="133" refid="class_smol_dock_1_1_molecule_1a8b1f02ad4e3b2ad991162668a61c2ddc"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a8b1f02ad4e3b2ad991162668a61c2ddc" kindref="member">
                        Molecule::numberOfBonds</ref>()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="134">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a18d9793aa2e080c9cefdc22afd40f314" kindref="member">
                        bonds</ref>.size();
                </highlight>
            </codeline>
            <codeline lineno="135">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="136">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="137" refid="class_smol_dock_1_1_molecule_1a9e3ef6b361a98cfbac69b11979d886da"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a9e3ef6b361a98cfbac69b11979d886da" kindref="member">
                        Molecule::populateFromPDB</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::string<sp/>&amp;filename,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::string<sp/>&amp;smiles_hint,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>seed,
                </highlight>
            </codeline>
            <codeline lineno="138">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::vector&lt;<sp/>std::shared_ptr&lt;InputPostProcessor::InputPostProcessor&gt;<sp/>&gt;<sp/>
                    postProcessors)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="139">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="140">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="141">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Flavor<sp/>=<sp/>1<sp/>--&gt;<sp/>ignore<sp/>alternate<sp/>location
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="142">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RDKit::RWMol<sp/>*mol<sp/>=<sp/>RDKit::PDBFileToMol(filename,
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">,<sp/>1,
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="143">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="144">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(mol<sp/>==
                    <sp/>
                </highlight>
                <highlight class="keyword">nullptr</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="145">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="146">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="147">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="148">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;<ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5"
                                       kindref="member">rwmol</ref>.reset(mol);
                </highlight>
            </codeline>
            <codeline lineno="149">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="150">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(smiles_hint<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;&quot;</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="151">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="namespace_smol_dock_1a288ddd3593922bcc17e5feb114841802" kindref="member">
                        AssignBondOrderFromTemplateSMILES</ref>(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>,<sp/>smiles_hint);
                </highlight>
            </codeline>
            <codeline lineno="152">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="153">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="154">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a919f8706ff2f2beb3f7bf8d53f4c3f96" kindref="member">
                    populateInternalAtomAndBondFromRWMol</ref>(seed,<sp/>postProcessors)<sp/>==
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="155">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="156">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="157">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="158">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="159">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="160" refid="class_smol_dock_1_1_molecule_1afe9743bfc4876343b6c63b0aac892f83"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::string
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1afe9743bfc4876343b6c63b0aac892f83" kindref="member">
                        Molecule::getResidueName</ref>()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="161">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1ac20346642bc3835228726b2508d8c42f" kindref="member">
                    residue_name</ref>;
                </highlight>
            </codeline>
            <codeline lineno="162">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="163">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="164" refid="class_smol_dock_1_1_molecule_1af9eb4a4fe0f1d72c104393b690e8f5cb"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1af9eb4a4fe0f1d72c104393b690e8f5cb" kindref="member">
                        Molecule::setResidueName</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::string<sp/>&amp;res_name)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="165">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;<ref refid="class_smol_dock_1_1_molecule_1ac20346642bc3835228726b2508d8c42f"
                                       kindref="member">residue_name
                </ref>
                    <sp/>=<sp/>res_name.substr(0,<sp/>3);
                </highlight>
            </codeline>
            <codeline lineno="166">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="167">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="168">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="169" refid="class_smol_dock_1_1_molecule_1a919f8706ff2f2beb3f7bf8d53f4c3f96"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a919f8706ff2f2beb3f7bf8d53f4c3f96" kindref="member">
                        Molecule::populateInternalAtomAndBondFromRWMol</ref>(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>seed,
                </highlight>
            </codeline>
            <codeline lineno="170">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::vector&lt;<sp/>std::shared_ptr&lt;InputPostProcessor::InputPostProcessor&gt;<sp/>&gt;<sp/>
                    postProcessors)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="171">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="172">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>We<sp/>care<sp/>about<sp/>Hs<sp/>only<sp/>during<sp/>conformer<sp/>
                    generation
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="173">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>TODO:<sp/>find<sp/>out<sp/>if<sp/>we<sp/>need<sp/>to<sp/>care<sp/>at
                    <sp/>other<sp/>moments...
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="174">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RDKit::MolOps::addHs(*(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>));
                </highlight>
            </codeline>
            <codeline lineno="175">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="176">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;<ref refid="class_smol_dock_1_1_molecule_1a008c28b068bf77dc74cc41926ee24507"
                                       kindref="member">initial_conformer_id
                </ref>
                    <sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="177">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>-&gt;getNumConformers()<sp/>==<sp/>0)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>generate<sp/>the<sp/>first<sp/>conformer
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="178">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="179">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;<ref refid="class_smol_dock_1_1_molecule_1a008c28b068bf77dc74cc41926ee24507"
                                       kindref="member">initial_conformer_id
                </ref>
                    <sp/>=<sp/>RDKit::DGeomHelpers::EmbedMolecule(*<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>,<sp/>1000,<sp/>seed,
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="180">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Else<sp/>we<sp/>will<sp/>just<sp/>use<sp/>the<sp/>first
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="181">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;<ref refid="class_smol_dock_1_1_molecule_1a008c28b068bf77dc74cc41926ee24507"
                                       kindref="member">initial_conformer_id
                </ref>
                    <sp/>=<sp/>(*(this-&gt;<ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5"
                                                kindref="member">rwmol</ref>-&gt;beginConformers()))-&gt;getId();
                </highlight>
            </codeline>
            <codeline lineno="182">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="183">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="184">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RDKit::Conformer<sp/>&amp;starting_conformer<sp/>=
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                        rwmol</ref>-&gt;getConformer(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a008c28b068bf77dc74cc41926ee24507" kindref="member">
                    initial_conformer_id</ref>);
                </highlight>
            </codeline>
            <codeline lineno="185">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="186">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>We<sp/>remove<sp/>them<sp/>afterward
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="187">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RDKit::MolOps::removeHs((*(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>)));
                </highlight>
            </codeline>
            <codeline lineno="188">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="189">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="190">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>atom_it<sp/>=
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                        rwmol</ref>-&gt;beginAtoms();<sp/>atom_it<sp/>!=
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                        rwmol</ref>-&gt;endAtoms();<sp/>++atom_it)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="191">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::shared_ptr&lt;Atom&gt;<sp/>current_atom;
                </highlight>
            </codeline>
            <codeline lineno="192">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>TODO<sp/>:<sp/>refactor<sp/>this<sp/>using<sp/>the<sp/>std::set<sp/>of
                    <sp/>type-name-properties
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="193">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">switch</highlight>
                <highlight class="normal"><sp/>((*atom_it)-&gt;getAtomicNum())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="194">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>1:
                </highlight>
            </codeline>
            <codeline lineno="195">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>current_atom<sp/>=<sp/>std::make_shared&lt;Atom&gt;(<ref
                        refid="class_smol_dock_1_1_atom_1a57e9a532fd04e1846c0d83edebb9fd41ad4ac1478a4d8a4f591d35e3d75f3de65"
                        kindref="member">Atom::AtomType::hydrogen</ref>,<sp/>(*atom_it)-&gt;getIdx());
                </highlight>
            </codeline>
            <codeline lineno="196">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="197">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>6:
                </highlight>
            </codeline>
            <codeline lineno="198">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>current_atom<sp/>=<sp/>std::make_shared&lt;Atom&gt;(<ref
                        refid="class_smol_dock_1_1_atom_1a57e9a532fd04e1846c0d83edebb9fd41ae1b832c8857262f1089376030b4298b3"
                        kindref="member">Atom::AtomType::carbon</ref>,<sp/>(*atom_it)-&gt;getIdx());
                </highlight>
            </codeline>
            <codeline lineno="199">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="200">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>7:
                </highlight>
            </codeline>
            <codeline lineno="201">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>current_atom<sp/>=<sp/>std::make_shared&lt;Atom&gt;(<ref
                        refid="class_smol_dock_1_1_atom_1a57e9a532fd04e1846c0d83edebb9fd41a63ebb9250f49340aece8d4ac541eaf61"
                        kindref="member">Atom::AtomType::nitrogen</ref>,<sp/>(*atom_it)-&gt;getIdx());
                </highlight>
            </codeline>
            <codeline lineno="202">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="203">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>8:
                </highlight>
            </codeline>
            <codeline lineno="204">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>current_atom<sp/>=<sp/>std::make_shared&lt;Atom&gt;(<ref
                        refid="class_smol_dock_1_1_atom_1a57e9a532fd04e1846c0d83edebb9fd41a6124d98749365e3db2c9e5b27ca04db6"
                        kindref="member">Atom::AtomType::oxygen</ref>,<sp/>(*atom_it)-&gt;getIdx());
                </highlight>
            </codeline>
            <codeline lineno="205">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="206">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">default</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="207">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BOOST_LOG_TRIVIAL(error)<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Unsupported<sp/>atom<sp/>type&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="208">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BOOST_LOG_TRIVIAL(error)<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Atomic<sp/>num<sp/>=<sp/>&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>(*atom_it)-&gt;getAtomicNum();
                </highlight>
            </codeline>
            <codeline lineno="209">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="210">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>break;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="211">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="212">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>RDGeom::Point3D<sp/>&amp;position<sp/>=<sp/>
                    starting_conformer.getAtomPos((*atom_it)-&gt;getIdx());
                </highlight>
            </codeline>
            <codeline lineno="213">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>current_atom-&gt;setAtomPosition(std::make_tuple(position.x,<sp/>position.y,<sp/>position.z));
                </highlight>
            </codeline>
            <codeline lineno="214">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="215">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="216">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                        atoms</ref>.push_back(current_atom);
                </highlight>
            </codeline>
            <codeline lineno="217">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="218">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="219">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>bond_it<sp/>=
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                        rwmol</ref>-&gt;beginBonds();<sp/>bond_it<sp/>!=
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                        rwmol</ref>-&gt;endBonds();<sp/>++bond_it)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="220">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>beginAtom<sp/>=<sp/>(*bond_it)-&gt;getBeginAtom();
                </highlight>
            </codeline>
            <codeline lineno="221">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>endAtom<sp/>=<sp/>(*bond_it)-&gt;getEndAtom();
                </highlight>
            </codeline>
            <codeline lineno="222">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="223">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>beginAtomID<sp/>=<sp/>beginAtom-&gt;getIdx();
                </highlight>
            </codeline>
            <codeline lineno="224">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>endAtomID<sp/>=<sp/>endAtom-&gt;getIdx();
                </highlight>
            </codeline>
            <codeline lineno="225">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="226">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>resultBegin<sp/>=<sp/>std::find_if(std::begin(<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>),<sp/>std::end(<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>),
                </highlight>
            </codeline>
            <codeline lineno="227">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>[beginAtomID](
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::shared_ptr&lt;Atom&gt;<sp/>&amp;atom)<sp/>-&gt;<sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="228">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>atom-&gt;getAtomID()<sp/>==<sp/>beginAtomID;
                </highlight>
            </codeline>
            <codeline lineno="229">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="230">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>);
                </highlight>
            </codeline>
            <codeline lineno="231">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="232">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>resultEnd<sp/>=<sp/>std::find_if(std::begin(<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>),<sp/>std::end(<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>),
                </highlight>
            </codeline>
            <codeline lineno="233">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>[endAtomID](
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::shared_ptr&lt;Atom&gt;<sp/>&amp;atom)<sp/>-&gt;<sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="234">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>atom-&gt;getAtomID()<sp/>==<sp/>endAtomID;
                </highlight>
            </codeline>
            <codeline lineno="235">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="236">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>);
                </highlight>
            </codeline>
            <codeline lineno="237">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="238">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(resultBegin<sp/>==<sp/>std::end(<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>)<sp/>||<sp/>resultEnd<sp/>==<sp/>std::end(<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="239">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BOOST_LOG_TRIVIAL(error)<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>atom<sp/>with<sp/>ID<sp/>=<sp/>&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>beginAtomID<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;<sp/>or<sp/>&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>endAtomID;
                </highlight>
            </codeline>
            <codeline lineno="240">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="241">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="242">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="243">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>new_bond<sp/>=<sp/>std::make_shared&lt;Bond&gt;(*resultBegin,<sp/>
                    *resultEnd);
                </highlight>
            </codeline>
            <codeline lineno="244">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="245">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="246">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*</highlight>
            </codeline>
            <codeline lineno="247">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>For<sp/>reference,<sp/>from<sp/>RDKit&apos;s<sp/>bond.h.<sp/>We<sp/>do<sp/>not<sp/>intent<sp/>
                    to<sp/>support<sp/>the<sp/>exotic/dative<sp/>bond<sp/>for<sp/>the
                </highlight>
            </codeline>
            <codeline lineno="248">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>foreseeable<sp/>future.
                </highlight>
            </codeline>
            <codeline lineno="249">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="250">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>typedef<sp/>enum<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="251">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>UNSPECIFIED<sp/>=<sp/>0,
                </highlight>
            </codeline>
            <codeline lineno="252">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SINGLE,
                </highlight>
            </codeline>
            <codeline lineno="253">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DOUBLE,
                </highlight>
            </codeline>
            <codeline lineno="254">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>TRIPLE,
                </highlight>
            </codeline>
            <codeline lineno="255">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>QUADRUPLE,
                </highlight>
            </codeline>
            <codeline lineno="256">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>QUINTUPLE,
                </highlight>
            </codeline>
            <codeline lineno="257">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>HEXTUPLE,
                </highlight>
            </codeline>
            <codeline lineno="258">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ONEANDAHALF,
                </highlight>
            </codeline>
            <codeline lineno="259">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>TWOANDAHALF,
                </highlight>
            </codeline>
            <codeline lineno="260">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>THREEANDAHALF,
                </highlight>
            </codeline>
            <codeline lineno="261">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>FOURANDAHALF,
                </highlight>
            </codeline>
            <codeline lineno="262">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>FIVEANDAHALF,
                </highlight>
            </codeline>
            <codeline lineno="263">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AROMATIC,
                </highlight>
            </codeline>
            <codeline lineno="264">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>IONIC,
                </highlight>
            </codeline>
            <codeline lineno="265">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>HYDROGEN,
                </highlight>
            </codeline>
            <codeline lineno="266">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>THREECENTER,
                </highlight>
            </codeline>
            <codeline lineno="267">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DATIVEONE,
                    <sp/>
                    <sp/>//!&lt;<sp/>one-electron<sp/>dative<sp/>(e.g.<sp/>from<sp/>a<sp/>C<sp/>in<sp/>a<sp/>Cp<sp/>ring
                    <sp/>to<sp/>a<sp/>metal)
                </highlight>
            </codeline>
            <codeline lineno="268">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DATIVE,
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>//!&lt;<sp/>standard<sp/>two-electron<sp/>dative
                </highlight>
            </codeline>
            <codeline lineno="269">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DATIVEL,
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>//!&lt;<sp/>standard<sp/>two-electron<sp/>dative
                </highlight>
            </codeline>
            <codeline lineno="270">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DATIVER,
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>//!&lt;<sp/>standard<sp/>two-electron<sp/>dative
                </highlight>
            </codeline>
            <codeline lineno="271">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>OTHER,
                </highlight>
            </codeline>
            <codeline lineno="272">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ZERO
                    <sp/>
                    <sp/>//!&lt;<sp/>Zero-order<sp/>bond<sp/>(from
                </highlight>
            </codeline>
            <codeline lineno="273">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>//<sp/>http://pubs.acs.org/doi/abs/10.1021/ci200488k)
                </highlight>
            </codeline>
            <codeline lineno="274">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}<sp/>BondType;
                </highlight>
            </codeline>
            <codeline lineno="275">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="276">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="277">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="278">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">switch</highlight>
                <highlight class="normal"><sp/>((*bond_it)-&gt;getBondType())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="279">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>RDKit::Bond::SINGLE:
                </highlight>
            </codeline>
            <codeline lineno="280">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>new_bond-&gt;setBondType(Bond::BondType::singlebond);
                </highlight>
            </codeline>
            <codeline lineno="281">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="282">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>RDKit::Bond::DOUBLE:
                </highlight>
            </codeline>
            <codeline lineno="283">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>new_bond-&gt;setBondType(Bond::BondType::doublebond);
                </highlight>
            </codeline>
            <codeline lineno="284">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="285">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>RDKit::Bond::TRIPLE:
                </highlight>
            </codeline>
            <codeline lineno="286">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>new_bond-&gt;setBondType(Bond::BondType::triplebond);
                </highlight>
            </codeline>
            <codeline lineno="287">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="288">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>RDKit::Bond::AROMATIC:
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>As<sp/>expected<sp/>aromatic<sp/>is<sp/>set<sp/>for<sp/>all<sp/>bond
                    <sp/>in<sp/>the<sp/>cycle
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="289">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>,<sp/>not<sp/>just<sp/>the<sp/>kekule-style<sp/>&quot;double<sp/>bond&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="290">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>new_bond-&gt;setBondType(Bond::BondType::aromatic);
                </highlight>
            </codeline>
            <codeline lineno="291">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="292">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">default</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="293">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BOOST_LOG_TRIVIAL(error)<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Unsupported<sp/>bond<sp/>type&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="294">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BOOST_LOG_TRIVIAL(error)<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Enum<sp/>bond<sp/>type<sp/>=<sp/>&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>(*bond_it)-&gt;getBondType();
                </highlight>
            </codeline>
            <codeline lineno="295">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="296">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>break;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="297">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="298">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>new_bond-&gt;publicizeToAtom();
                </highlight>
            </codeline>
            <codeline lineno="299">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a18d9793aa2e080c9cefdc22afd40f314" kindref="member">
                        bonds</ref>.push_back(new_bond);
                </highlight>
            </codeline>
            <codeline lineno="300">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="301">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="302">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;<ref refid="class_smol_dock_1_1_molecule_1a7295fbcc507a2d0c8acca492393117bb"
                                       kindref="member">numberOfRotatableBonds
                </ref>
                    <sp/>=<sp/>RDKit::Descriptors::calcNumRotatableBonds((RDKit::ROMol)<sp/>(*this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>));
                </highlight>
            </codeline>
            <codeline lineno="303">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="304">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="305">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Post<sp/>processing<sp/>to<sp/>assign<sp/>variant
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="306">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="307">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Processing<sp/>to<sp/>assign<sp/>the<sp/>apolar<sp/>flag<sp/>to<sp/>
                    carbon
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="308">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="namespace_smol_dock_1a43bbd3ed0ad4b1eec9e5ae8d9d99318d" kindref="member">
                        assignApolarCarbonFlag</ref>(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>);
                </highlight>
            </codeline>
            <codeline lineno="309">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="310">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Final<sp/>post<sp/>processing<sp/>:<sp/>calling
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="311">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>pprocessor<sp/>:<sp/>postProcessors)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="312">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>&amp;atom:<sp/>this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="313">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>pprocessor-&gt;processAtomFromLigand(*atom);
                </highlight>
            </codeline>
            <codeline lineno="314">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="315">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="316">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="317">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="318">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="319">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="320" refid="class_smol_dock_1_1_molecule_1af6263934134836e9ce66d2254b6b6801"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1af6263934134836e9ce66d2254b6b6801" kindref="member">
                        Molecule::updateAtomPositionsFromiConformer</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref>
                    <sp/>&amp;conformer)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="321">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="322">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                        atoms</ref>.size();<sp/>++i)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="323">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                        atoms</ref>[i]-&gt;setAtomPosition(
                </highlight>
            </codeline>
            <codeline lineno="324">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::make_tuple(conformer.<ref
                        refid="struct_smol_dock_1_1i_conformer_1a45c379f6a880da313bf3519dc415e992" kindref="member">
                    x</ref>[i],<sp/>conformer.<ref
                        refid="struct_smol_dock_1_1i_conformer_1ac3019c0cd62660a4392591dd9519cc9a" kindref="member">
                    y</ref>[i],<sp/>conformer.<ref
                        refid="struct_smol_dock_1_1i_conformer_1a5c1fc6f9bad31ec2731337e9ba1e9a0f" kindref="member">
                    z</ref>[i])
                </highlight>
            </codeline>
            <codeline lineno="325">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>);
                </highlight>
            </codeline>
            <codeline lineno="326">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="327">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="328">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="329">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="330">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="331">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="332" refid="class_smol_dock_1_1_molecule_1a70156ffc4081eb92f9dc4e2c70096c84"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule" kindref="compound">Molecule</ref>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a70156ffc4081eb92f9dc4e2c70096c84" kindref="member">
                        Molecule::deepcopy</ref>()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="333">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule" kindref="compound">Molecule</ref>
                    <sp/>newmol(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="334">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="335">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="336">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::vector&lt;std::tuple&lt;std::shared_ptr&lt;Atom&gt;,
                    <sp/>
                    <ref refid="class_smol_dock_1_1_atom" kindref="compound">Atom</ref>
                    <sp/>*&gt;<sp/>&gt;<sp/>new_old_lookup_table;
                </highlight>
            </codeline>
            <codeline lineno="337">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>newmol.<ref refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3"
                                     kindref="member">atoms</ref>.clear();
                </highlight>
            </codeline>
            <codeline lineno="338">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>&amp;ptr:<sp/>this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="339">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_atom" kindref="compound">Atom</ref>
                    <sp/>*newatom_ptr<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_atom" kindref="compound">Atom</ref>(*ptr);
                </highlight>
            </codeline>
            <codeline lineno="340">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>newatom_ptr-&gt;<ref refid="class_smol_dock_1_1_atom_1af45fc99da6ffbf539ba654c91e1bb752"
                                              kindref="member">bonds</ref>.clear();
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>We<sp/>will<sp/>restore<sp/>it<sp/>after<sp/>rebuilding<sp/>the<sp/>
                    bonds
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="341">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::shared_ptr&lt;Atom&gt;<sp/>&amp;inserted<sp/>=<sp/>newmol.<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>.emplace_back(newatom_ptr);
                </highlight>
            </codeline>
            <codeline lineno="342">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>new_old_lookup_table.push_back(
                </highlight>
            </codeline>
            <codeline lineno="343">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::make_tuple(inserted,<sp/>ptr.get()));
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Register<sp/>new/old<sp/>pair<sp/>to<sp/>rebuild<sp/>bonds
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="344">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="345">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="346">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="347">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>newmol.<ref refid="class_smol_dock_1_1_molecule_1a18d9793aa2e080c9cefdc22afd40f314"
                                     kindref="member">bonds</ref>.clear();
                </highlight>
            </codeline>
            <codeline lineno="348">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>&amp;ptr:<sp/>this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a18d9793aa2e080c9cefdc22afd40f314" kindref="member">
                    bonds</ref>)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="349">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_atom" kindref="compound">Atom</ref>
                    <sp/>*endA_ptr<sp/>=<sp/>ptr-&gt;getEndA().get();
                </highlight>
            </codeline>
            <codeline lineno="350">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_atom" kindref="compound">Atom</ref>
                    <sp/>*endB_ptr<sp/>=<sp/>ptr-&gt;getEndB().get();
                </highlight>
            </codeline>
            <codeline lineno="351">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="352">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Find<sp/>matches<sp/>in<sp/>lookup<sp/>table<sp/>:
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="353">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::shared_ptr&lt;Atom&gt;<sp/>endA<sp/>=<sp/>std::get&lt;0&gt;(
                </highlight>
            </codeline>
            <codeline lineno="354">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*(std::find_if(std::begin(new_old_lookup_table),<sp/>std::end(new_old_lookup_table),
                </highlight>
            </codeline>
            <codeline lineno="355">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>[&amp;](
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::tuple&lt;std::shared_ptr&lt;Atom&gt;,
                    <sp/>
                    <ref refid="class_smol_dock_1_1_atom" kindref="compound">Atom</ref>
                    <sp/>*&gt;<sp/>&amp;e)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="356">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(std::get&lt;1&gt;(e)<sp/>==<sp/>endA_ptr);
                </highlight>
            </codeline>
            <codeline lineno="357">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>})));
                </highlight>
            </codeline>
            <codeline lineno="358">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="359">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::shared_ptr&lt;Atom&gt;<sp/>endB<sp/>=<sp/>std::get&lt;0&gt;(
                </highlight>
            </codeline>
            <codeline lineno="360">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*(std::find_if(std::begin(new_old_lookup_table),<sp/>std::end(new_old_lookup_table),
                </highlight>
            </codeline>
            <codeline lineno="361">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>[&amp;](
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::tuple&lt;std::shared_ptr&lt;Atom&gt;,
                    <sp/>
                    <ref refid="class_smol_dock_1_1_atom" kindref="compound">Atom</ref>
                    <sp/>*&gt;<sp/>&amp;e)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="362">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(std::get&lt;1&gt;(e)<sp/>==<sp/>endB_ptr);
                </highlight>
            </codeline>
            <codeline lineno="363">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>})));
                </highlight>
            </codeline>
            <codeline lineno="364">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="365">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_bond" kindref="compound">Bond</ref>
                    <sp/>*newbond<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_bond" kindref="compound">Bond</ref>(endA,<sp/>endB,<sp/>ptr-&gt;getBondID());
                </highlight>
            </codeline>
            <codeline lineno="366">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>newbond-&gt;<ref refid="class_smol_dock_1_1_bond_1a4ebf28309120c880429f205edf67b9f8"
                                          kindref="member">setBondType</ref>(ptr-&gt;getBondType());
                </highlight>
            </codeline>
            <codeline lineno="367">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::shared_ptr&lt;Bond&gt;<sp/>&amp;inserted_bond<sp/>=<sp/>newmol.<ref
                        refid="class_smol_dock_1_1_molecule_1a18d9793aa2e080c9cefdc22afd40f314" kindref="member">
                    bonds</ref>.emplace_back(newbond);
                </highlight>
            </codeline>
            <codeline lineno="368">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>PublicizeToAtom<sp/>uses<sp/>enable_shared_from_this,<sp/>which<sp/>
                    means<sp/>the<sp/>previous<sp/>statement,<sp/>creating<sp/>a<sp/>shared_ptr
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="369">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>must<sp/>occur<sp/>before<sp/>the<sp/>following<sp/>statement,<sp/>
                    lest<sp/>throw<sp/>std::bad_weak_ptr
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="370">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>inserted_bond-&gt;publicizeToAtom();
                </highlight>
            </codeline>
            <codeline lineno="371">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="372">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="373">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>newmol.<ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5"
                                     kindref="member">rwmol</ref>.reset(
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>RDKit::RWMol(*<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>));
                </highlight>
            </codeline>
            <codeline lineno="374">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="375">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>newmol;
                </highlight>
            </codeline>
            <codeline lineno="376">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="377">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="378" refid="class_smol_dock_1_1_molecule_1ab5fc86fa1ac97374e7d8d339404568e9"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1ab5fc86fa1ac97374e7d8d339404568e9" kindref="member">
                        Molecule::getInitialConformer</ref>(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>centroidNormalization)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="379">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>rdkit_first_conformer_id<sp/>=<sp/>(*(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>-&gt;beginConformers()))-&gt;getId();
                </highlight>
            </codeline>
            <codeline lineno="380">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref>
                    <sp/>conformer<sp/>=<sp/>this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a5247ebed094d5593a5a704c0c2919c0c" kindref="member">
                    generateIConformerForGivenRDKitConformerID</ref>(rdkit_first_conformer_id,<sp/>
                    centroidNormalization);
                </highlight>
            </codeline>
            <codeline lineno="381">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>conformer;
                </highlight>
            </codeline>
            <codeline lineno="382">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="383">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="384" refid="class_smol_dock_1_1_molecule_1a5247ebed094d5593a5a704c0c2919c0c"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref>
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a5247ebed094d5593a5a704c0c2919c0c" kindref="member">
                        Molecule::generateIConformerForGivenRDKitConformerID</ref>(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">id</highlight>
                <highlight class="normal">,</highlight>
            </codeline>
            <codeline lineno="385">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>centroidNormalization)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="386">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_smol_dock_1_1i_conformer" kindref="compound">iConformer</ref>
                    <sp/>conformer;
                </highlight>
            </codeline>
            <codeline lineno="387">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RDKit::Conformer<sp/>rdkit_conformer<sp/>=<sp/>this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                    rwmol</ref>-&gt;getConformer(
                </highlight>
                <highlight class="keywordtype">id</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="388">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="389">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>num_atoms<sp/>=<sp/>this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>.size();
                </highlight>
            </codeline>
            <codeline lineno="390">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1a45c379f6a880da313bf3519dc415e992"
                                        kindref="member">x</ref>.reserve(static_cast&lt;size_t&gt;(num_atoms));
                </highlight>
            </codeline>
            <codeline lineno="391">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1ac3019c0cd62660a4392591dd9519cc9a"
                                        kindref="member">y</ref>.reserve(static_cast&lt;size_t&gt;(num_atoms));
                </highlight>
            </codeline>
            <codeline lineno="392">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1a5c1fc6f9bad31ec2731337e9ba1e9a0f"
                                        kindref="member">z</ref>.reserve(static_cast&lt;size_t&gt;(num_atoms));
                </highlight>
            </codeline>
            <codeline lineno="393">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1add04de1dd457ae228e398ffa9260497d"
                                        kindref="member">type</ref>.reserve(static_cast&lt;size_t&gt;(num_atoms));
                </highlight>
            </codeline>
            <codeline lineno="394">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="395">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.
                    <ref refid="struct_smol_dock_1_1i_conformer_1aabef94f550eef03cf2d4304df78cf403" kindref="member">
                        num_rotatable_bond
                    </ref>
                    <sp/>=<sp/>this-&gt;<ref refid="class_smol_dock_1_1_molecule_1a7295fbcc507a2d0c8acca492393117bb"
                                             kindref="member">numberOfRotatableBonds</ref>;
                </highlight>
            </codeline>
            <codeline lineno="396">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="397">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="398">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">using<sp/>namespace
                    <sp/>
                </highlight>
                <highlight class="normal">boost::accumulators;</highlight>
            </codeline>
            <codeline lineno="399">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>accumulator_set&lt;double,<sp/>stats&lt;tag::mean,<sp/>tag::count,<sp/>tag::min,<sp/>tag::max&gt;<sp/>&gt;<sp/>
                    acc_x,<sp/>acc_y,<sp/>acc_z;
                </highlight>
            </codeline>
            <codeline lineno="400">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="401">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(centroidNormalization)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="402">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>atom_it<sp/>=
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                        rwmol</ref>-&gt;beginAtoms();<sp/>atom_it<sp/>!=
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                        rwmol</ref>-&gt;endAtoms();<sp/>++atom_it)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="403">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>RDGeom::Point3D<sp/>&amp;position<sp/>=<sp/>
                    rdkit_conformer.getAtomPos((*atom_it)-&gt;getIdx());
                </highlight>
            </codeline>
            <codeline lineno="404">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>acc_x(position.x);
                </highlight>
            </codeline>
            <codeline lineno="405">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>acc_y(position.y);
                </highlight>
            </codeline>
            <codeline lineno="406">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>acc_z(position.z);
                </highlight>
            </codeline>
            <codeline lineno="407">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="408">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="409">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1aca79d26663d734bf23b5ed7ddc3dba57"
                                        kindref="member">centroidNormalizingTransform</ref>.
                    <ref refid="struct_smol_dock_1_1i_translation_1a74a60efc8b2463b7ea1ca1e824a4ed28" kindref="member">
                        x
                    </ref>
                    <sp/>=<sp/>mean(acc_x);
                </highlight>
            </codeline>
            <codeline lineno="410">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1aca79d26663d734bf23b5ed7ddc3dba57"
                                        kindref="member">centroidNormalizingTransform</ref>.
                    <ref refid="struct_smol_dock_1_1i_translation_1a5362a54675ecc6bac99325c69521fbb5" kindref="member">
                        y
                    </ref>
                    <sp/>=<sp/>mean(acc_y);
                </highlight>
            </codeline>
            <codeline lineno="411">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1aca79d26663d734bf23b5ed7ddc3dba57"
                                        kindref="member">centroidNormalizingTransform</ref>.
                    <ref refid="struct_smol_dock_1_1i_translation_1a2ed07fcfc129a2bf7696b65d481317c5" kindref="member">
                        z
                    </ref>
                    <sp/>=<sp/>mean(acc_z);
                </highlight>
            </codeline>
            <codeline lineno="412">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="413">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="414">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1aca79d26663d734bf23b5ed7ddc3dba57"
                                        kindref="member">centroidNormalizingTransform</ref>.
                    <ref refid="struct_smol_dock_1_1i_translation_1a74a60efc8b2463b7ea1ca1e824a4ed28" kindref="member">
                        x
                    </ref>
                    <sp/>=<sp/>0.0;
                </highlight>
            </codeline>
            <codeline lineno="415">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1aca79d26663d734bf23b5ed7ddc3dba57"
                                        kindref="member">centroidNormalizingTransform</ref>.
                    <ref refid="struct_smol_dock_1_1i_translation_1a5362a54675ecc6bac99325c69521fbb5" kindref="member">
                        y
                    </ref>
                    <sp/>=<sp/>0.0;
                </highlight>
            </codeline>
            <codeline lineno="416">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1aca79d26663d734bf23b5ed7ddc3dba57"
                                        kindref="member">centroidNormalizingTransform</ref>.
                    <ref refid="struct_smol_dock_1_1i_translation_1a2ed07fcfc129a2bf7696b65d481317c5" kindref="member">
                        z
                    </ref>
                    <sp/>=<sp/>0.0;
                </highlight>
            </codeline>
            <codeline lineno="417">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="418">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="419">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>atom_it<sp/>=
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                        rwmol</ref>-&gt;beginAtoms();<sp/>atom_it<sp/>!=
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1ad474d416278768d82c07fdf1d915e0f5" kindref="member">
                        rwmol</ref>-&gt;endAtoms();<sp/>++atom_it)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="420">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="421">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Find<sp/>the<sp/>corresponding<sp/>Atom<sp/>in<sp/>this-&gt;atoms
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="422">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">auto</highlight>
                <highlight class="normal"><sp/>current_Atom_it<sp/>=<sp/>(std::find_if(std::begin(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>),<sp/>std::end(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>),
                </highlight>
            </codeline>
            <codeline lineno="423">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>[&amp;](
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::shared_ptr&lt;Atom&gt;<sp/>&amp;e)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="424">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>e-&gt;getAtomID()<sp/>==<sp/>(*atom_it)-&gt;getIdx();
                </highlight>
            </codeline>
            <codeline lineno="425">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}));
                </highlight>
            </codeline>
            <codeline lineno="426">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(current_Atom_it<sp/>==<sp/>std::end(this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a322259625da05c62925c705d8c4fb7c3" kindref="member">
                    atoms</ref>))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="427">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BOOST_LOG_TRIVIAL(error)<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>current<sp/>atom&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="428">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::exit(3);
                </highlight>
            </codeline>
            <codeline lineno="429">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="430">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::shared_ptr&lt;Atom&gt;<sp/>current_Atom<sp/>=<sp/>*current_Atom_it;
                </highlight>
            </codeline>
            <codeline lineno="431">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1add04de1dd457ae228e398ffa9260497d"
                                        kindref="member">type</ref>.push_back(static_cast&lt;unsigned<sp/>char&gt;((*atom_it)-&gt;getAtomicNum()));
                </highlight>
            </codeline>
            <codeline lineno="432">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1af56992de619302df905180a481a4d993"
                                        kindref="member">variant</ref>.push_back((
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">)<sp/>current_Atom-&gt;variant);
                </highlight>
            </codeline>
            <codeline lineno="433">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="434">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>RDGeom::Point3D<sp/>&amp;position<sp/>=<sp/>
                    rdkit_conformer.getAtomPos((*atom_it)-&gt;getIdx());
                </highlight>
            </codeline>
            <codeline lineno="435">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="436">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(centroidNormalization)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="437">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1a45c379f6a880da313bf3519dc415e992"
                                        kindref="member">x</ref>.push_back(position.x<sp/>-<sp/>conformer.<ref
                        refid="struct_smol_dock_1_1i_conformer_1aca79d26663d734bf23b5ed7ddc3dba57" kindref="member">
                    centroidNormalizingTransform</ref>.
                    <ref refid="struct_smol_dock_1_1i_translation_1a74a60efc8b2463b7ea1ca1e824a4ed28" kindref="member">
                        x
                    </ref>
                    <sp/>);
                </highlight>
            </codeline>
            <codeline lineno="438">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1ac3019c0cd62660a4392591dd9519cc9a"
                                        kindref="member">y</ref>.push_back(position.y<sp/>-<sp/>conformer.<ref
                        refid="struct_smol_dock_1_1i_conformer_1aca79d26663d734bf23b5ed7ddc3dba57" kindref="member">
                    centroidNormalizingTransform</ref>.
                    <ref refid="struct_smol_dock_1_1i_translation_1a5362a54675ecc6bac99325c69521fbb5" kindref="member">
                        y
                    </ref>
                    <sp/>);
                </highlight>
            </codeline>
            <codeline lineno="439">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1a5c1fc6f9bad31ec2731337e9ba1e9a0f"
                                        kindref="member">z</ref>.push_back(position.z<sp/>-<sp/>conformer.<ref
                        refid="struct_smol_dock_1_1i_conformer_1aca79d26663d734bf23b5ed7ddc3dba57" kindref="member">
                    centroidNormalizingTransform</ref>.
                    <ref refid="struct_smol_dock_1_1i_translation_1a2ed07fcfc129a2bf7696b65d481317c5" kindref="member">
                        z
                    </ref>
                    <sp/>);
                </highlight>
            </codeline>
            <codeline lineno="440">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="441">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="442">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1a45c379f6a880da313bf3519dc415e992"
                                        kindref="member">x</ref>.push_back(position.x);
                </highlight>
            </codeline>
            <codeline lineno="443">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1ac3019c0cd62660a4392591dd9519cc9a"
                                        kindref="member">y</ref>.push_back(position.y);
                </highlight>
            </codeline>
            <codeline lineno="444">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1a5c1fc6f9bad31ec2731337e9ba1e9a0f"
                                        kindref="member">z</ref>.push_back(position.z);
                </highlight>
            </codeline>
            <codeline lineno="445">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="446">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="447">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>conformer.<ref refid="struct_smol_dock_1_1i_conformer_1a1dbd8cb4eaa4e5e2f0afcdd1b36dd862"
                                        kindref="member">atomicRadius</ref>.push_back(<ref
                        refid="namespace_smol_dock_1a9c3abf1e37dc4fe013df80997dedb20b" kindref="member">
                    atomTypeToAtomicRadius</ref>(
                </highlight>
            </codeline>
            <codeline lineno="448">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="namespace_smol_dock_1ae559278f4b66ec9a09ddfaebb224f897" kindref="member">
                        stringToAtomType</ref>(boost::to_upper_copy&lt;std::string&gt;((*atom_it)-&gt;getSymbol()))
                </highlight>
            </codeline>
            <codeline lineno="449">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>));
                </highlight>
            </codeline>
            <codeline lineno="450">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="451">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="452">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>conformer;
                </highlight>
            </codeline>
            <codeline lineno="453">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="454">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="455" refid="class_smol_dock_1_1_molecule_1a41216a87fbe541655f267501568e2aa7"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_smol_dock_1_1_molecule_1a41216a87fbe541655f267501568e2aa7" kindref="member">
                        Molecule::getNumRotatableBond</ref>()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="456">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>this-&gt;<ref
                        refid="class_smol_dock_1_1_molecule_1a7295fbcc507a2d0c8acca492393117bb" kindref="member">
                    numberOfRotatableBonds</ref>;
                </highlight>
            </codeline>
            <codeline lineno="457">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="458">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="459">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="460">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="461">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="462">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="463">
                <highlight class="normal">}</highlight>
            </codeline>
        </programlisting>
        <location file="Structures/Molecule.cpp"/>
    </compounddef>
</doxygen>
